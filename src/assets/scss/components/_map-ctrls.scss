// ng-include gives height to svg defs
.never-show {
    display: none
}

.ctrls-container {
    position: absolute;
    left: $panel-spacing;
    top: $panel-spacing;
}

//vars
$pi:3.14;

//config
$menu-items:6;
$open-distance:105px;
$opening-angle: $pi*2;

.ctrls-container a {
  color: inherit;
}

$ball-size: 47px;

%ball {
  background-color: $med-blue;
  border-radius: 100%;
  box-shadow: 0 3px 5px $med-blue;
  color: $primary-color;
  display: block;
  height: $ball-size;
  line-height: $ball-size;
  position: absolute;
  text-align: center;
  transform: translate3d(0, 0, 0);
  transition: transform ease-out 200ms;
  width: $ball-size;
}

.menu-open {
  display: none;
}

.ctrls-menu-item {
  @extend %ball;
}


.ctrls-menu {

  box-sizing: border-box;

}


.ctrls-menu-item {

  svg {
    $size: 70%;
    display: block;
    fill: $near-white;
    height: $size;
    left: (100%-$size)/2;
    position: relative;
    top: (100%-$size)/2;
    transition: fill 400ms ease;
    width: $size;
  }
  &:hover {
    svg {
        fill: $primary-color;
        transition: fill 400ms ease;
    }
    background-color: $near-white;
    cursor: pointer;
  }
  @for $i from 1 through $menu-items{
    &:nth-child(#{$i+2}){
      transition-duration:400ms;
    }
  }
}

.menu-open-button{
  @extend %ball;
  cursor: pointer;
  transform: scale(1.1, 1.1) translate3d(0, 0, 0);
  transition-duration: 400ms;
  transition-timing-function: cubic-bezier(.175, .885, .320, 1.275);
  z-index: 2;
}

.menu-open-button:hover{
  transform: scale(1.2, 1.2) translate3d(0, 0, 0);
}

.menu-open:checked+.menu-open-button{
  background-color: $near-white;
  transform: scale(.9, .9) translate3d(0, 0, 0);
  transition-duration: 400ms;
  transition-timing-function: linear;
}

.menu-open:checked~.ctrls-menu-item{
  transition-timing-function:cubic-bezier(.165, .840, .440, 1.000);
  @for $i from 1 through $menu-items{

    &:nth-child(#{$i+2}){
      transition-duration:90ms+(100ms*$i);
      transform:translate3d(0,$ball-size*$i,0);
      // transition: background-color 400ms ease,
      //             transform 90ms+(100ms*$i) ease;
    }
  }
}

// HAMBURGER
.hamburger {
  $width: 20px;
  $height: 3px;
  width: $width;
  height: $height;
  background-color: $near-white;
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -$width/2;
  margin-top: -$height/2;
  transition: transform 400ms;
}

$hamburger-spacing:7px;

.hamburger-1 {
  transform: translate3d(0, -$hamburger-spacing, 0);
}

.hamburger-2 {
  transform: translate3d(0, 0, 0);
}

.hamburger-3 {
  transform: translate3d(0, $hamburger-spacing, 0);
}

.menu-open:checked+.menu-open-button{

  .hamburger {
    background-color: $med-blue;
  }

  .hamburger-1 {
    transform: translate3d(0, 0, 0) rotate(45deg);
  }

  .hamburger-2 {
    transform: translate3d(0, 0, 0) scale(.1, 1);
  }

  .hamburger-3 {
    transform: translate3d(0, 0, 0) rotate(-45deg);
  }

}