// VENDOR

// SASS MQ \\

// To enable support for browsers that do not support @media queries,
// (IE <= 8, Firefox <= 3, Opera <= 9) set $mq-responsive to false
// Create a separate stylesheet served exclusively to these browsers,
// meaning @media queries will be rasterized, relying on the cascade itself
$mq-responsive: true;

// Name your breakpoints in a way that creates a ubiquitous language
// across team members. It will improve communication between
// stakeholders, designers, developers, and testers.
$mq-breakpoints: (
    mobile:  320px,
    tablet:  740px,
    desktop: 980px,
    wide:    1300px,

    // Tweakpoints
    desktopAd: 810px,
    mobileLandscape: 480px
);

// Define the breakpoint from the $mq-breakpoints list that should
// be used as the target width when outputting a static stylesheet
// (i.e. when $mq-responsive is set to 'false').
$mq-static-breakpoint: desktop;

// If you want to display the currently active breakpoint in the top
// right corner of your site during development, add the breakpoints
// to this list, ordered by width, e.g. (mobile, tablet, desktop).
$mq-show-breakpoints: (mobile, mobileLandscape, tablet, desktop, wide);
@import 'vendor/sass-mq/mq';
@import 'vendor/leaflet';


// HELPERS
// The helpers directory is reserved for Sass code that doesn't cause Sass to actually output CSS. Things like mixin declarations, functions, and variables.

// HELPERS: FUNCTIONS
@import 'helpers/functions/fonts';

// HELPERS: MIXINS
@import 'helpers/mixins/fonts';
@import 'helpers/mixins/breakpoints';

// HELPERS: VARIABLES
@import 'helpers/variables/colors';
@import 'helpers/variables/fonts';


// BASE
// Layout, reset, typography

@import 'base/layout';
@import 'base/reset';
@import 'base/typography';


// COMPONENTS

@import 'components/feat-info';
@import 'components/find-projects';
@import 'components/input';
@import 'components/map-ctrls';
@import 'components/map-filters';
@import 'components/map-layers';



