{"version":3,"sources":["config/app-config.js","map/cdbValues.js","map/mapDirective.js","map/mapFactory.js","layers/layersFactory.js","layers/playgroundDirective.js","popups/popupCtrl.js","popups/popupFactory.js","popups/popupRoutes.js","ctrls/ctrlsCtrl.js","ctrls/ctrlsDirective.js","ctrls/ctrlsFactory.js","panels/panel.info.js","panels/panel.poi.js","panels/panel.seasons.js","panels/panel.trail.js","panels/panelsCtrl.js","panels/panelsDirective.js","panels/panelsFactory.js"],"names":[],"mappings":"AAAA,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;AAAA;AAAA,IAE9B,OAAO;AAAA,SACF,MAAM,EAAE,WAAW;AAAA,IACxB,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,IACzB,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,IACzB,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA;AAAA,IAEzB,QAAQ,CAAC,WAAW,CAAC,MAAM;AAAA;AAAA,QAEvB,GAAG,CAAC,IAAI;AAAA;AAAA,QAER,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,qBAAqB,CAAC,GAAG;AAAA,YACnD,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,MAAM;AAAA,UAC7E,IAAI;AAAA,YACF,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,MAAM;AAAA;AAAA;AAAA,QAGpF,MAAM,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA,IAIf,OAAO;AAAA,SACF,MAAM,EAAE,cAAc;AAAA,SACtB,QAAQ,EAAE,QAAQ;AAAA,YACf,GAAG,EAAE,WAAW;AAAA;AAAA;AAAA,IAGxB,OAAO,CAAC,MAAM,EAAE,MAAM;AAAA,aACb,cAAc;AAAA,aACd,WAAW;AAAA,aACX,YAAY;AAAA,aACZ,YAAY;AAAA,aACZ,YAAY;AAAA,aACZ,SAAS;AAAA,aACT,YAAY,CAAC,UAAU,CAAC,aAAa;AAAA,aACrC,EAAE,CAAC,MAAM;AAAA;AAAA,SAEb,GAAG,IAAI,GAAG,KAAK,SAAS,KAAK,KAAK,KAAK,WAAW,KAAK,QAAQ;AAAA,YAC5D,QAAQ,GAAG,GAAG,GAAG,SAAS,GAAG,KAAK,GAAG,WAAW,GAAG,QAAQ;AAAA,iBACtD,SAAS,EAAE,KAAK,IAAI,KAAK;AAAA,iBACzB,SAAS,EAAE,WAAW,IAAI,WAAW;AAAA;AAAA,mBAEnC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG;AAAA,iBAChC,SAAS,CAAC,WAAW;AAAA,oBAClB,MAAM,EAAE,CAAC;AAAA,oBACT,IAAI,GAAG,SAAS;AAAA,oBAChB,QAAQ,KAAK,UAAU;AAAA,oBACvB,UAAU;AAAA,oBACV,IAAI,EAAE,KAAK;AAAA;AAAA;AAAA,iBAGd,WAAW,CAAC,OAAO,IAAI,SAAS,CAAC,WAAW,CAAC,MAAM;AAAA;AAAA;AAAA;AAAA;;AC3DpE,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,QAAQ,CAAC,MAAM,CAAC,GAAG;AAAA,QACf,GAAG,CAAC,IAAI,KAAK,GAAG,KAAK,GAAG;AAAA,YACpB,GAAG,KAAK,IAAI,EAAE,IAAI;AAAA,QACtB,MAAM,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,IAKd,OAAO;AAAA,SACF,MAAM,EAAE,MAAM;AAAA,SACd,KAAK,EAAE,SAAS;AAAA,YACb,WAAW,EAAE,KAAK;AAAA,eACf,YAAY,EAAE,IAAI;AAAA,YACrB,UAAU,GAAG,OAAO,CAAC,GAAG;AAAA,YACxB,QAAQ,GAAG,GAAG;AAAA,YACd,YAAY,GAAG,KAAK;AAAA,YACpB,cAAc,GAAG,KAAK;AAAA,YACtB,YAAY,GAAG,OAAO,CAAC,GAAG;AAAA,YAC1B,UAAU,GAAG,GAAG;AAAA,YAChB,IAAI,GAAG,OAAO;AAAA,YACd,SAAS,GAAG,UAAU;AAAA,YACtB,QAAQ;AAAA,gBACJ,WAAW,EAAE,KAAK;AAAA,mBACf,YAAY,EAAE,IAAI;AAAA,gBACrB,UAAU,GAAG,OAAO,CAAC,GAAG;AAAA,gBACxB,QAAQ,GAAG,GAAG;AAAA,gBACd,YAAY,GAAG,KAAK;AAAA,gBACpB,cAAc,GAAG,KAAK;AAAA,gBACtB,YAAY,GAAG,OAAO,CAAC,GAAG;AAAA,gBAC1B,UAAU,GAAG,GAAG;AAAA,gBAChB,IAAI,GAAG,OAAO;AAAA,gBACd,SAAS,GAAG,UAAU;AAAA;AAAA,YAE1B,aAAa,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ;AAAA;AAAA,oBAEzC,GAAG,GAAG,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;AAAA,oBACvD,QAAQ,EAAE,MAAM,EAAE,KAAK;AAAA,oBACvB,aAAa,GAAG,UAAU;AAAA;AAAA;AAAA,YAGlC,aAAa,OAAO,KAAK;AAAA,gBACrB,QAAQ,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE;AAAA,gBACtH,GAAG,GAAG,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI;AAAA,kBACnF,GAAG,CAAC,KAAK;AAAA,YACf,eAAe,OAAO,OAAO;AAAA,gBACzB,QAAQ,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE;AAAA,gBAC3H,GAAG,GAAG,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI;AAAA,kBACrF,GAAG,CAAC,OAAO;AAAA,YACjB,YAAY,OAAO,UAAU;AAAA,gBACzB,GAAG,GAAG,MAAM,CAAC,oBAAoB,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU;AAAA,gBAC7D,QAAQ,IAAI,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AAAA,mBACnI,aAAa,GAAG,UAAU;AAAA,kBAC3B,GAAG,CAAC,UAAU;AAAA,YACpB,YAAY,OAAO,QAAQ;AAAA,gBACvB,QAAQ,EAAE,MAAM,EAAE,QAAQ;AAAA,mBACvB,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE;AAAA,gBACtD,aAAa,GAAG,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO;AAAA,gBAC1D,GAAG,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI;AAAA;AAAA,eAEjX,gBAAgB;AAAA,mBACZ,QAAQ,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAAA,mBACrC,aAAa,GAAG,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;;ACjE7E,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,MAAM;AAAA,SACd,SAAS,EAAE,cAAc,GAAG,cAAc;AAAA;AAAA,IAE/C,cAAc,EAAE,MAAM,KAAK,UAAU,IAAI,aAAa;AAAA;AAAA,IAEtD,QAAQ,CAAC,cAAc,CAAC,UAAU,EAAE,aAAa;AAAA;AAAA,QAE7C,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,QAAQ,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,GAAG;AAAA,YAC1C,OAAO,EAAE,IAAI;AAAA,YACb,UAAU,EAAE,QAAQ;AAAA;AAAA,gBAEhB,QAAQ,CAAC,IAAI;AAAA,oBACT,UAAU,CAAC,SAAS;AAAA,oBACpB,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG;AAAA;AAAA;AAAA,gBAG5C,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;ACvBpB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,MAAM;AAAA,SACd,OAAO,EAAE,UAAU,GAAG,UAAU;AAAA;AAAA,IAErC,UAAU,EAAE,MAAM,KAAK,SAAS;AAAA;AAAA,IAEhC,QAAQ,CAAC,UAAU,CAAC,SAAS;AAAA;AAAA,QAEzB,GAAG,CAAC,GAAG;AAAA;AAAA,QAEP,GAAG,CAAC,UAAU;AAAA,YACV,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO;AAAA,YACpC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,WAAW;AAAA,eACtC,OAAO,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,sCAAsC,CAAC,QAAQ,CAAC,aAAa;AAAA,mBACpK,WAAW,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,QAIzO,GAAG,CAAC,eAAe;AAAA;AAAA,YAEf,WAAW,EAAE,KAAK;AAAA,eACf,MAAM,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK;AAAA,eAC3B,IAAI,EAAE,EAAE;AAAA,YACX,WAAW,EAAE,KAAK;AAAA,YAClB,MAAM,EAAE,UAAU,CAAC,OAAO;AAAA;AAAA;AAAA;AAAA,QAI9B,GAAG,CAAC,UAAU;AAAA,YACV,SAAS,EAAE,SAAS;AAAA,YACpB,GAAG,EAAE,GAAG;AAAA,YACR,eAAe,EAAE,eAAe;AAAA,YAChC,UAAU,EAAE,UAAU;AAAA,YACtB,QAAQ,EAAE,QAAQ;AAAA;AAAA;AAAA,QAGtB,QAAQ,CAAC,QAAQ,CAAC,GAAG;AAAA,YACjB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI;AAAA,gBACxC,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI;AAAA,gBACvC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK;AAAA,YACzC,GAAG,CAAC,SAAS;AAAA,iBACR,WAAW;AAAA,iBACX,UAAU;AAAA;AAAA,eAEZ,GAAG,CAAC,KAAK,CAAC,MAAM;AAAA;AAAA;AAAA,QAGvB,QAAQ,CAAC,SAAS;AAAA;AAAA,eAEX,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM;AAAA,eACrC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE,MAAM;AAAA,eAC/B,KAAK,CAAC,QAAQ;AAAA;AAAA,eAEd,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AAAA,YACxB,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAAA,mBAChC,QAAQ,GAAG,QAAQ,GAAG,EAAE;AAAA,uBACpB,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE,MAAM,EAAE,QAAQ;AAAA,mBACvC,EAAE;AAAA,uBACE,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,MAAM;AAAA;AAAA;AAAA,eAGtC,IAAI;AAAA,YACP,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAAA,mBAC9B,QAAQ,GAAG,QAAQ,GAAG,EAAE;AAAA,uBACpB,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE,MAAM,EAAE,QAAQ;AAAA,uBACnC,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI;AAAA;AAAA;AAAA,YAGvC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,eAAe;AAAA;AAAA,YAE7C,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG;AAAA,YAClC,MAAM,CAAC,UAAU,CAAC,GAAG;AAAA;AAAA;AAAA,QAGzB,MAAM,CAAC,UAAU;AAAA;AAAA;AAAA;AAAA,K;AC9EzB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,OAAO,EAAE,aAAa,GAAG,aAAa;AAAA;AAAA,IAE3C,aAAa,EAAE,MAAM,KAAK,SAAS,KAAK,KAAK,KAAK,WAAW,KAAK,SAAS,IAAI,YAAY,KAAK,OAAO;AAAA;AAAA,IAEvG,QAAQ,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,GAAG,WAAW,GAAG,SAAS,EAAE,YAAY,GAAG,OAAO;AAAA;AAAA,WAEnF,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK;AAAA,QAC1C,GAAG,CAAC,SAAS;AAAA,YACT,IAAI;AAAA,YACJ,KAAK;AAAA,YACL,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,SAAS;AAAA,YACT,KAAK;AAAA,YACL,SAAS;AAAA;AAAA;AAAA,KAGhB,GAAG,CAAC,aAAa;AAAA,YACV,WAAW,EAAE,WAAW;AAAA,MAC9B,eAAe,EAAE,eAAe;AAAA,YAC1B,eAAe,EAAE,eAAe;AAAA,YAChC,SAAS,EAAE,SAAS;AAAA;AAAA;AAAA,WAGrB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG;AAAA,KACpE,QAAQ,CAAC,WAAW,CAAC,GAAG;AAAA;AAAA,YAEjB,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ;AAAA;AAAA,eAE9B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK;AAAA,eACjD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC;AAAA,YAC3B,QAAQ,EAAE,SAAS,KAAK,SAAS,CAAC,aAAa;AAAA;AAAA,eAE5C,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG;AAAA,SAC3B,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ;AAAA,UAChC,KAAK,CAAC,GAAG;AAAA,UACT,EAAE,EAAE,IAAI,GAAG,QAAQ,CAAC,KAAK;AAAA;AAAA,mBAEhB,GAAG,CAAC,WAAW;AAAA,gBAClB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,EAAE,KAAK;AAAA;AAAA,gBAE3C,GAAG,CAAC,SAAS,IAAI,SAAS,CAAC,WAAW,CAAC,IAAI;AAAA;AAAA,gBAE3C,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,YAAY,GAAG,QAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW;AAAA,qBAC7E,KAAK,CAAC,EAAE,EAAE,KAAK;AAAA,wBACZ,UAAU,EAAE,CAAC;AAAA,wBACb,IAAI,EAAE,CAAC;AAAA,wBACP,MAAM;AAAA,wBACN,KAAK,EAAE,SAAS;AAAA,wBAChB,GAAG,EAAE,GAAG,CAAC,CAAC;AAAA,wBACV,GAAG,EAAE,GAAG,CAAC,CAAC;AAAA;AAAA,wBAEV,MAAM,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,mBAIjB,MAAM,CAAC,SAAS,CAAC,SAAS;AAAA,aAChC,eAAe,CAAC,GAAG,EAAE,KAAK;AAAA;AAAA;AAAA,UAG7B,EAAE,EAAE,KAAK,GAAG,QAAQ;AAAA,aACjB,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,WAKlD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW;AAAA,KAClE,QAAQ,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK;AAAA;AAAA,mBAErB,KAAK;AAAA;AAAA,eAET,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;AAAA,YAC1B,KAAK,CAAC,cAAc;AAAA,cAClB,QAAQ,EAAE,SAAS,CAAC,aAAa,CAAC,QAAQ;AAAA,cAC1C,IAAI,GAAG,KAAK;AAAA,cACZ,GAAG,EAAE,SAAS,CAAC,aAAa,CAAC,GAAG;AAAA;AAAA;AAAA,eAG/B,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;AAAA,YAC5B,KAAK,CAAC,cAAc;AAAA,cAClB,QAAQ,EAAE,SAAS,CAAC,eAAe,CAAC,QAAQ;AAAA,cAC5C,IAAI,GAAG,OAAO;AAAA,cACd,GAAG,EAAE,SAAS,CAAC,eAAe,CAAC,GAAG;AAAA;AAAA;AAAA,mBAG7B,MAAM;AAAA;AAAA,eAEV,QAAQ,EAAE,KAAK,EAAE,CAAC;AAAA,YACrB,KAAK,CAAC,cAAc;AAAA,cAClB,QAAQ,EAAE,SAAS,CAAC,YAAY,CAAC,QAAQ;AAAA,cACzC,aAAa,EAAE,SAAS,CAAC,YAAY,CAAC,aAAa;AAAA,cACnD,IAAI,GAAG,QAAQ;AAAA,cACf,GAAG,EAAE,SAAS,CAAC,YAAY,CAAC,GAAG;AAAA,eAC9B,EAAE,EAAE,YAAY,GAAG,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI;AAAA;AAAA;AAAA,iBAG9C,KAAK,CAAC,EAAE,EAAE,KAAK;AAAA,oBACZ,UAAU,EAAE,IAAI,CAAC,UAAU;AAAA,oBAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;AAAA,oBACf,MAAM,EAAE,IAAI,CAAC,QAAQ;AAAA,oBACrB,KAAK,GAAG,QAAQ;AAAA,oBAChB,GAAG,EAAE,GAAG,CAAC,CAAC;AAAA,oBACV,GAAG,EAAE,GAAG,CAAC,CAAC;AAAA;AAAA,oBAEV,MAAM,EAAE,IAAI;AAAA;AAAA;AAAA,mBAGb,OAAO,CAAC,QAAQ,CAAC,OAAO;AAAA,gBAC3B,eAAe,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,UAAU;AAAA;AAAA;AAAA;AAAA,eAIlD,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK;AAAA,YACxD,aAAa,CAAC,SAAS,CAAC,IAAI,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,YACtD,aAAa,CAAC,SAAS,CAAC,KAAK,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,YACvD,aAAa,CAAC,SAAS,CAAC,OAAO,KAAK,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,YACvD,aAAa,CAAC,SAAS,CAAC,QAAQ,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,eACpD,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,eAC9C,aAAa,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,eAC7C,aAAa,CAAC,KAAK,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,eAC7C,aAAa,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA;AAAA,mBAEzC,KAAK,CAAC,aAAa;AAAA,eACvB,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS;AAAA,YACpC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM;AAAA,YAC5B,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;AAAA;AAAA,gBAEnC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AAAA,gBAClC,QAAQ,CAAC,cAAc,CAAC,IAAI;AAAA;AAAA,iBAE3B,GAAG,CAAC,GAAG,CAAC,IAAI;AAAA;AAAA,aAEhB,GAAG,CAAC,QAAQ,CAAC,MAAM;AAAA;AAAA,eAEjB,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK;AAAA,QACjC,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU;AAAA;AAAA,YAE5C,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,UAAU;AAAA,YACpC,KAAK,CAAC,WAAW,CAAC,MAAM;AAAA;AAAA;AAAA;AAAA,QAI5B,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU;AAAA,YAC7B,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK,KAAK,EAAE,IAAI;AAAA,gBAC7B,SAAS,SAAS,KAAK,KAAK,UAAU,KAAK,UAAU,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;AAAA,uBACnE,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;AAAA,uBAChC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;AAAA;AAAA,YAEnD,MAAM,CAAC,GAAG,GAAG,SAAS;AAAA;AAAA;AAAA,KAG7B,MAAM,CAAC,aAAa;AAAA;AAAA;AAAA,K;AC9JzB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,GAAG,CAAC,UAAU,GAAG,QAAQ;AAAA;AAAA,QAErB,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,WAAW,SAAS,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI;AAAA,YAC/F,OAAO,EAAE,IAAI;AAAA,eACV,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;AAAA,YAC5E,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,GAAG,IAAI;AAAA;AAAA,gBAE7C,GAAG,CAAC,KAAK,IAAI,GAAG;AAAA,oBACZ,IAAI,IAAI,GAAG;AAAA,oBACX,IAAI,IAAI,QAAQ;AAAA,oBAChB,EAAE,IAAI,YAAY;AAAA,oBAClB,KAAK,IAAI,SAAS;AAAA;AAAA,gBAEtB,GAAG,CAAC,OAAO,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,KAAK;AAAA;AAAA,gBAE9C,GAAG,CAAC,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,OAAO;AAAA;AAAA,iBAEpG,IAAI,CAAC,GAAG,CAAC,QAAQ;AAAA,iBACjB,OAAO,CAAC,QAAQ,CAAC,IAAI;AAAA,oBAClB,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AAAA,wBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAStC,UAAU,EAAE,MAAM,KAAK,UAAU,KAAK,SAAS,IAAI,aAAa;AAAA;AAAA,IAEhE,OAAO;AAAA,SACF,MAAM,EAAE,MAAM;AAAA,YACX,SAAS,EAAE,cAAc,GAAG,cAAc;AAAA,SAC7C,SAAS,EAAE,UAAU,GAAG,UAAU;AAAA;AAAA,K;ACxC3C,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,UAAU,EAAE,SAAS,GAAG,SAAS;AAAA;AAAA,IAEtC,SAAS,EAAE,MAAM,MAAM,GAAG,KAAK,OAAO,KAAK,SAAS,KAAK,KAAK,KAAK,WAAW,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,aAAa,KAAK,KAAK,IAAI,UAAU;AAAA;AAAA,IAElK,QAAQ,CAAC,SAAS,EAAE,GAAG,GAAG,OAAO,GAAG,SAAS,GAAG,KAAK,GAAG,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,GAAG,KAAK,EAAE,UAAU;AAAA;AAAA,QAEvI,GAAG,CAAC,EAAE,GAAG,IAAI;AAAA;AAAA,QAEb,EAAE,CAAC,aAAa,IAAI,SAAS,CAAC,WAAW,CAAC,MAAM;AAAA;AAAA;AAAA,gBAGxC,QAAQ,CAAC,MAAM;AAAA;AAAA;AAAA,QAGvB,EAAE,CAAC,UAAU,GAAG,QAAQ;AAAA,YACpB,YAAY,CAAC,UAAU;AAAA;AAAA;AAAA,WAGxB,MAAM,CAAC,KAAK;AAAA,QACf,EAAE,CAAC,YAAY,GAAG,IAAI;AAAA;AAAA,oBAEV,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;AAAA;AAAA,WAElC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG;AAAA,QACtB,EAAE,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AAAA;AAAA,eAE5B,MAAM;AAAA;AAAA,WAEV,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;AAAA,QACvB,EAAE,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI;AAAA;AAAA,WAE1B,OAAO;AAAA,QACV,EAAE,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI;AAAA;AAAA,QAEvC,EAAE,CAAC,aAAa,IAAI,KAAK;AAAA;AAAA,WAEtB,IAAI,CAAC,IAAI;AAAA,QACZ,EAAE,CAAC,QAAQ,KAAK,IAAI,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI;AAAA;AAAA,QAE5C,YAAY,CAAC,aAAa,EAAE,WAAW;AAAA,SACtC,IAAI,CAAC,QAAQ,CAAC,MAAM;AAAA;AAAA,YAEjB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI;AAAA,gBACpB,eAAe,EAAE,IAAI,KAAK,GAAG;AAAA,gBAC7B,GAAG,CAAC,GAAG;AAAA,gBACP,GAAG,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK;AAAA;AAAA,YAElC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AAAA,gBAChB,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AAAA,mBAC3B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMxB,MAAM,CAAC,GAAG;AAAA;AAAA,SAEb,IAAI,CAAC,QAAQ,CAAC,MAAM;AAAA,YACjB,GAAG,CAAC,YAAY;AAAA,gBACZ,cAAc,GAAG,MAAM;AAAA,gBACvB,MAAM,IAAI,QAAQ,OAAO,WAAW,CAAC,KAAK,MAAM,QAAQ,KAAK,WAAW,CAAC,MAAM;AAAA;AAAA,YAEnF,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc;AAAA,gBACxB,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,CAAC;AAAA;AAAA,YAE/C,EAAE,CAAC,YAAY,GAAG,YAAY;AAAA;AAAA;AAAA;AAAA,WAI/B,UAAU;AAAA,WACV,MAAM,CAAC,UAAU;AAAA,SACnB,KAAK,CAAC,WAAW,GAAG,CAAC;AAAA;AAAA,QAEtB,GAAG,CAAC,YAAY;AAAA,YACZ,MAAM,IAAI,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG;AAAA,YAC3C,IAAI,EAAE,EAAE,CAAC,WAAW;AAAA;AAAA;AAAA,WAGrB,GAAG,CAAC,EAAE,CAAC,IAAI;AAAA,QACd,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;AAAA;AAAA,eAExD,QAAQ;AAAA,YACX,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI;AAAA,YACvC,GAAG,CAAC,GAAG,OAAO,IAAI,EAAE,KAAK;AAAA;AAAA,YAEzB,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;AAAA;AAAA,gBAEpC,IAAI,IAAI,QAAQ,MAAM,UAAU,CAAC,CAAC,EAAE,KAAK,MAAM,SAAS,IAAI,UAAU,CAAC,CAAC,EAAE,QAAQ;AAAA,gBAClF,KAAK,GAAG,UAAU,CAAC,CAAC,EAAE,KAAK;AAAA;AAAA,gBAE3B,EAAE,GAAG,KAAK,MAAM,QAAQ,KAAK,KAAK,MAAM,UAAU;AAAA,oBAC9C,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC,GAAG;AAAA;AAAA;AAAA,gBAGjC,GAAG,CAAC,IAAI;AAAA,oBACJ,IAAI,EAAE,IAAI;AAAA,oBACV,OAAO,EAAE,UAAU,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,YAK7B,EAAE,CAAC,UAAU,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA,WAIpB,OAAO,CAAC,GAAG,CAAC,KAAK;AAAA,QACpB,EAAE,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,EAAE,OAAO;AAAA;AAAA,eAE/B,OAAO,CAAC,SAAS;AAAA;AAAA,YAEpB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK;AAAA,gBACrB,eAAe;AAAA,gBACf,KAAK;AAAA,gBACL,eAAe;AAAA;AAAA,eAEhB,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,SAAS;AAAA,YACxC,EAAE,EAAE,KAAK,MAAM,SAAS,KAAK,KAAK,MAAM,KAAK;AAAA;AAAA,gBAEzC,KAAK,GAAG,OAAO,CAAC,UAAU;AAAA;AAAA,mBAEvB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ;AAAA,gBACvB,eAAe,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK;AAAA,gBAC/C,aAAa,CAAC,eAAe,CAAC,eAAe,EAAE,KAAK,EAAE,KAAK;AAAA;AAAA,sBAErD,GAAG,CAAC,OAAO,GAAG,SAAS;AAAA,mBAC1B,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK;AAAA,oBAC5D,IAAI,CAAC,QAAQ,CAAC,qBAAqB;AAAA;AAAA,uBAEhC,GAAG,CAAC,QAAQ,GAAG,qBAAqB;AAAA,uBACpC,eAAe,GAAG,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa;AAAA;AAAA,2BAEvE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,YAAY,GAAG,eAAe;AAAA;AAAA;AAAA;AAAA,iBAIxE,IAAI;AAAA;AAAA,sBAEC,MAAM,CAAC,IAAI,CAAC,OAAO;AAAA;AAAA;AAAA,sBAGnB,eAAe;AAAA,sBACf,eAAe,IAAI,QAAQ,MAAM,OAAO,CAAC,KAAK,MAAM,QAAQ,MAAM,OAAO,CAAC,QAAQ;AAAA,uBACjF,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,YAAY,GAAG,eAAe;AAAA;AAAA;AAAA,eAGtE,GAAG,CAAC,EAAE,CAAC,SAAS;AAAA,YACnB,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG;AAAA;AAAA,eAE3C,MAAM;AAAA,eACN,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;AAAA,mBAC3D,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI;AAAA,uBACnC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,SAAS,GAAG,UAAU;AAAA;AAAA;AAAA,aAGhE,KAAK,CAAC,EAAE,EAAE,KAAK;AAAA,gBACZ,UAAU,EAAE,OAAO,CAAC,UAAU;AAAA,gBAC9B,KAAK,EAAE,OAAO,CAAC,KAAK;AAAA,gBACpB,GAAG,EAAE,OAAO,CAAC,GAAG;AAAA,gBAChB,GAAG,EAAE,OAAO,CAAC,GAAG;AAAA,gBAChB,MAAM,EAAE,OAAO,CAAC,QAAQ;AAAA;AAAA,gBAExB,MAAM,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAYhB,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC,SAAS,GAAG,QAAQ,EAAE,KAAK,EAAE,QAAQ;AAAA;AAAA,eAE3D,GAAG,CAAC,GAAG,OAAO,KAAK,EAAE,IAAI;AAAA;AAAA,eAEzB,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;AAAA;AAAA,mBAElC,IAAI,IAAI,QAAQ,MAAM,QAAQ,CAAC,CAAC,EAAE,KAAK,MAAM,SAAS,IAAI,QAAQ,CAAC,CAAC,EAAE,QAAQ;AAAA,mBAC9E,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,KAAK;AAAA;AAAA,mBAEzB,EAAE,GAAG,KAAK,MAAM,QAAQ,KAAK,KAAK,MAAM,UAAU;AAAA,uBAC9C,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC,GAAG;AAAA;AAAA;AAAA,mBAGjC,GAAG,CAAC,IAAI;AAAA,uBACJ,IAAI,EAAE,IAAI;AAAA,uBACV,OAAO,EAAE,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,eAK3B,EAAE,CAAC,UAAU,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA,oBAId,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC,YAAY,GAAG,QAAQ,EAAE,KAAK,EAAE,IAAI;AAAA;AAAA,eAElE,EAAE,GAAG,WAAW,CAAC,KAAK,MAAM,QAAQ;AAAA,mBAChC,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI;AAAA,iBAC/C,IAAI;AAAA,mBACF,EAAE,CAAC,YAAY,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA,mBAItB,EAAE,EAAE,KAAK,MAAM,QAAQ,IAAI,KAAK,MAAM,UAAU;AAAA;AAAA,eAEpD,EAAE,CAAC,YAAY,IAAI,gBAAgB;AAAA;AAAA,eAEnC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,WAAW,EAAE,KAAK;AAAA,gBAC/C,IAAI,CAAC,QAAQ,CAAC,qBAAqB;AAAA;AAAA,mBAEhC,GAAG,CAAC,QAAQ,GAAG,qBAAqB;AAAA,uBAChC,eAAe,GAAG,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa;AAAA;AAAA,oBAE3E,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,YAAY,GAAG,eAAe;AAAA;AAAA;AAAA,Y;AC9NlF,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,OAAO,EAAE,YAAY,GAAG,YAAY;AAAA;AAAA,IAEzC,YAAY,EAAE,MAAM,MAAM,SAAS,KAAK,IAAI,IAAI,QAAQ,KAAK,OAAO,KAAK,KAAK,KAAK,WAAW;AAAA;AAAA,IAE9F,QAAQ,CAAC,YAAY,EAAE,SAAS,GAAG,IAAI,EAAE,QAAQ,GAAG,OAAO,GAAG,KAAK,GAAG,WAAW;AAAA;AAAA,QAE7E,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG;AAAA;AAAA,QAEtF,GAAG,CAAC,MAAM;AAAA,YACN,aAAa,EAAE,aAAa;AAAA,YAC5B,UAAU,EAAE,UAAU;AAAA,YACtB,YAAY,EAAE,YAAY;AAAA,YAC1B,SAAS,EAAE,SAAS;AAAA,YACpB,SAAS,EAAE,SAAS;AAAA,YACpB,UAAU,EAAE,UAAU;AAAA;AAAA;AAAA,QAG1B,QAAQ,CAAC,UAAU;AAAA,aACd,KAAK,CAAC,EAAE,EAAE,IAAI;AAAA;AAAA,gBAEX,MAAM,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,QAIpB,QAAQ,CAAC,SAAS,CAAC,KAAK;AAAA,YACpB,GAAG,CAAC,SAAS,GAAG,KAAK;AAAA,YACrB,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS;AAAA;AAAA;AAAA,WAGpC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM;AAAA,QAC5B,QAAQ,CAAC,aAAa,CAAC,IAAI;AAAA;AAAA,YAEvB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,MAAM;AAAA,gBAChD,QAAQ,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM;AAAA,gBACzC,KAAK;AAAA;AAAA,YAET,EAAE,EAAE,IAAI,CAAC,KAAK,MAAM,QAAQ;AAAA,gBACxB,KAAK,GAAG,QAAQ;AAAA,cAClB,IAAI;AAAA,gBACF,KAAK,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,GAAG,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI;AAAA;AAAA;AAAA,YAG3J,MAAM,EAAE,IAAI;AAAA,gBACR,MAAM,GAAG,GAAG;AAAA,gBACZ,GAAG,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,WAKf,GAAG,CAAC,SAAS,CAAC,MAAM;AAAA,QACvB,QAAQ,CAAC,YAAY,CAAC,cAAc;AAAA;AAAA,YAEhC,GAAG,CAAC,YAAY;AAAA,YAChB,GAAG,CAAC,MAAM,IAAI,QAAQ,OAAO,WAAW,CAAC,KAAK,MAAM,QAAQ,KAAK,WAAW,CAAC,MAAM;AAAA;AAAA,YAEnF,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc;AAAA;AAAA,gBAExB,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,YAI/C,MAAM,CAAC,YAAY;AAAA;AAAA;AAAA;AAAA,QAIvB,QAAQ,CAAC,SAAS,CAAC,MAAM;AAAA,YACrB,GAAG,CAAC,KAAK;AAAA,gBACL,cAAc,IAAI,SAAS,CAAC,WAAW,CAAC,QAAQ;AAAA,gBAChD,cAAc,IAAI,SAAS,CAAC,WAAW,CAAC,UAAU;AAAA;AAAA,eAEnD,QAAQ;AAAA,YACX,GAAG,CAAC,SAAS,IAAI,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,oBAAoB,EAAE,QAAQ;AAAA,sBAClE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG;AAAA,sBAC5C,WAAW,CAAC,QAAQ,EAAE,SAAS;AAAA,sBAC/B,UAAU,KAAK,MAAM,CAAC,MAAM,OAAO,SAAS,IAAI,IAAI;AAAA,sBACpD,EAAE,CAAC,IAAI;AAAA,uBACN,QAAQ,EAAE,EAAE,CAAC,KAAK;AAAA,sBACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,cAAc;AAAA,sBAC9C,GAAG,CAAC,SAAS,CAAC,OAAO,MAAM,SAAS,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC;AAAA,sBACnE,GAAG,CAAC,UAAU,QAAQ,MAAM,CAAC,IAAI,CAAC,UAAU;AAAA,sBAC5C,KAAK,CAAC,GAAG;AAAA;AAAA,eAEhB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK;AAAA,YACtB,GAAG,CAAC,SAAS,KAAK,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,oBAAoB,EAAE,QAAQ;AAAA,sBACnE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG;AAAA,sBAC5C,WAAW,CAAC,QAAQ,EAAE,SAAS;AAAA,sBAC/B,UAAU,KAAK,MAAM,CAAC,MAAM,OAAO,SAAS,IAAI,IAAI;AAAA,sBACpD,EAAE,CAAC,IAAI;AAAA,uBACN,SAAS,EAAE,EAAE,CAAC,KAAK;AAAA,yBACjB,IAAI,MAAM,SAAS,CAAC,WAAW,CAAC,IAAI;AAAA,sBACvC,IAAI,CAAC,SAAS;AAAA,sBACd,KAAK,CAAC,SAAS,CAAC,OAAO,MAAM,SAAS,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC;AAAA,sBACrE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAAA,uBACrB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK;AAAA;AAAA,uBAEvB,KAAK,CAAC,SAAS;AAAA,YAC1B,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,SAAS;AAAA;AAAA,YAEpC,GAAG,CAAC,MAAM,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAAA,YACzD,KAAK,GAAG,MAAM,GAAG,SAAS,GAAG,SAAS;AAAA;AAAA,YAEtC,MAAM,EAAE,IAAI;AAAA,gBACR,MAAM,GAAG,GAAG;AAAA,gBACZ,GAAG,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA,KAIrB,MAAM,CAAC,MAAM;AAAA;AAAA;AAAA;;ACjHlB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO,CAAC,MAAM,EAAE,MAAM;AAAA,SACjB,MAAM,GAAG,0BAA0B,KAAK,aAAa,KAAK,iBAAiB,IAAI,QAAQ,GAAG,QAAQ,CAAC,0BAA0B,GAAG,aAAa,GAAG,iBAAiB,EAAE,QAAQ;AAAA;AAAA,eAErK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ;AAAA,YACtD,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI;AAAA,YACpD,0BAA0B,CAAC,OAAO,CAAC,OAAO;AAAA;AAAA,eAEvC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AAAA,YAC7B,GAAG,CAAC,WAAW,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AAAA,gBACjE,SAAS,KAAK,KAAK,CAAC,UAAU;AAAA;AAAA,gBAE9B,iBAAiB,CAAC,SAAS;AAAA;AAAA,aAE9B,aAAa;AAAA,iBACT,KAAK,EAAE,IAAI;AAAA,oBACR,GAAG;AAAA,uBACA,QAAQ,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,GAAG;AAAA,oBAChC,MAAM;AAAA,wBACF,KAAK;AAAA;AAAA,oBAET,UAAU,EAAE,QAAQ;AAAA,4BACZ,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK;AAAA;AAAA;AAAA,iBAG/D,KAAK,EAAE,KAAK;AAAA,oBACT,GAAG,IAAI,KAAK,EAAE,UAAU,EAAE,MAAM;AAAA,oBAChC,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;AAAA,oBAC1D,UAAU,GAAG,SAAS;AAAA,oBACtB,YAAY,GAAG,EAAE;AAAA,oBACjB,MAAM;AAAA,wBACF,GAAG,EAAE,CAAC;AAAA,wBACN,GAAG,EAAE,CAAC;AAAA,wBACN,OAAO,EAAE,CAAC;AAAA;AAAA,oBAEd,OAAO;AAAA,wBACH,WAAW,KAAK,IAAI,KAAK,WAAW,GAAG,QAAQ,EAAE,IAAI,GAAG,WAAW;AAAA;AAAA,4BAE/D,GAAG,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK;AAAA,gCAC1B,KAAK;AAAA;AAAA,4BAET,EAAE,EAAE,KAAK,MAAM,SAAS;AAAA,gCACpB,KAAK,GAAG,WAAW,IAAI,UAAU,EAAE,QAAQ,EAAE,QAAQ,GAAG,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;AAAA,8BAC5F,IAAI;AAAA,gCACF,KAAK,GAAG,WAAW,IAAI,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,OAAO,KAAK,MAAM,EAAE,CAAC,KAAK;AAAA,kCACzF,IAAI,KAAK,KAAK,KAAK,KAAK,CAAC,UAAU,QAAQ,WAAW,CAAC,UAAU;AAAA;AAAA;AAAA,4BAGvE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;AAAA,gCAC1C,MAAM,CAAC,QAAQ,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;ACpDpD,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,WAAW;AAAA,SACnB,UAAU,EAAE,SAAS,GAAG,SAAS;AAAA;AAAA,IAEtC,SAAS,EAAE,MAAM,KAAK,YAAY,IAAI,QAAQ;AAAA;AAAA,IAE9C,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,QAAQ;AAAA;AAAA,QAErC,GAAG,CAAC,EAAE,GAAG,IAAI;AAAA,YACT,GAAG,GAAG,YAAY,CAAC,GAAG;AAAA,YACtB,UAAU,GAAG,YAAY,CAAC,UAAU;AAAA;AAAA,QAExC,MAAM,CAAC,GAAG;AAAA;AAAA,QAEV,QAAQ,CAAC,MAAM,CAAC,GAAG;AAAA;AAAA,YAEf,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG;AAAA,gBAC5B,OAAO,EAAE,EAAE;AAAA,gBACX,KAAK,GAAG,MAAM,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAAA;AAAA,YAExE,OAAO,CAAC,IAAI,GAAG,GAAG;AAAA;AAAA,YAElB,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG;AAAA,gBAC9B,IAAI,GAAG,MAAM,CAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,QAKhC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AAAA;AAAA,QAErB,EAAE,CAAC,UAAU,GAAG,KAAK;AAAA,WAClB,EAAE,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,OAAO,GAAG;AAAA;AAAA,QAEtC,EAAE,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM;AAAA;AAAA,QAE/B,EAAE,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ;AAAA;AAAA,QAEnC,EAAE,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM;AAAA;AAAA,QAE/B,EAAE,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO;AAAA;AAAA,QAEjC,EAAE,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO;AAAA,QACrC,EAAE,CAAC,OAAO,GAAG,QAAQ;AAAA,YACjB,EAAE,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,WAKtC,EAAE,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW;AAAA,QAC5C,EAAE,CAAC,WAAW,GAAG,QAAQ;AAAA;AAAA,eAElB,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ;AAAA,mBAC5B,QAAQ;AAAA,mBACR,YAAY;AAAA;AAAA,YAEnB,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU;AAAA;AAAA,YAE9B,EAAE,EAAE,EAAE,CAAC,UAAU;AAAA,gBACb,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ;AAAA,gBACzB,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO;AAAA,gBAClC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM;AAAA,gBAC9B,UAAU,CAAC,MAAM,CAAC,WAAW;AAAA,cAC/B,IAAI;AAAA,gBACF,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;AAAA,gBACrB,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM;AAAA,gBACjC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO;AAAA,gBAC/B,UAAU,CAAC,OAAO,CAAC,WAAW;AAAA;AAAA;AAAA,eAG/B,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU;AAAA,mBACtB,EAAE,EAAE,GAAG,KAAK,SAAS;AAAA,uBACjB,QAAQ,GAAG,GAAG;AAAA,qBAChB,IAAI;AAAA,uBACF,YAAY,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA,eAI1B,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY;AAAA,eACvC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ;AAAA,eAChC,UAAU,CAAC,QAAQ,EAAE,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;ACnF/C,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,WAAW;AAAA,SACnB,SAAS,EAAE,WAAW,GAAG,WAAW;AAAA;AAAA,IAEzC,WAAW,EAAE,MAAM,KAAK,QAAQ;AAAA;AAAA,IAEhC,QAAQ,CAAC,WAAW,CAAC,QAAQ;AAAA,QACzB,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI;AAAA,YACxD,UAAU,GAAG,SAAS;AAAA,YACtB,YAAY,GAAG,EAAE;AAAA,YACjB,OAAO,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,K;AChBzB,UAAU,YAAY,CAAC,EAAE;AAAA,CACxB,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,WAAW;AAAA,SACnB,OAAO,EAAE,YAAY,GAAG,YAAY;AAAA;AAAA,OAEtC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG;AAAA,IAC1C,YAAY,EAAE,MAAM,KAAK,UAAU;AAAA;AAAA,IAEnC,QAAQ,CAAC,YAAY,CAAC,UAAU;AAAA;AAAA,QAE5B,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG;AAAA;AAAA,QAExB,GAAG,CAAC,YAAY;AAAA,YACZ,OAAO,EAAE,OAAO;AAAA,YAChB,UAAU,EAAE,UAAU;AAAA,YACtB,MAAM,EAAE,MAAM;AAAA,YACd,GAAG,EAAE,GAAG;AAAA,YACR,UAAU,EAAE,UAAU,CAAC,UAAU;AAAA,YACjC,QAAQ,EAAE,QAAQ;AAAA,YAClB,MAAM,EAAE,MAAM;AAAA,YACd,OAAO,EAAE,OAAO;AAAA;AAAA;AAAA,QAGpB,QAAQ,CAAC,OAAO;AAAA,YACZ,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO;AAAA;AAAA;AAAA,QAGjC,QAAQ,CAAC,MAAM;AAAA,YACX,GAAG,CAAC,MAAM;AAAA;AAAA;AAAA,QAGd,QAAQ,CAAC,OAAO;AAAA,YACZ,GAAG,CAAC,OAAO;AAAA;AAAA;AAAA,QAGf,QAAQ,CAAC,QAAQ;AAAA,YACb,UAAU,CAAC,QAAQ,CAAC,GAAG;AAAA;AAAA;AAAA,QAG3B,QAAQ,CAAC,MAAM;AAAA,YACX,GAAG,CAAC,MAAM;AAAA,gBACN,OAAO,EAAE,IAAI;AAAA,gBACb,OAAO,EAAE,EAAE;AAAA;AAAA;AAAA;AAAA,QAInB,QAAQ,CAAC,UAAU;AAAA,YACf,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,WAAW,EAAE,UAAU;AAAA,YACvD,GAAG,CAAC,cAAc;AAAA,gBACd,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,cAAc,CAAC,IAAI;AAAA;AAAA;AAAA,WAGzC,QAAQ,CAAC,WAAW,CAAC,OAAO;AAAA,WAC5B,QAAQ,CAAC,WAAW;AAAA;AAAA;AAAA;AAAA,eAIhB,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ;AAAA,mBAC5B,QAAQ;AAAA,mBACR,YAAY;AAAA;AAAA,eAEhB,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU;AAAA,mBACtB,EAAE,EAAE,GAAG,KAAK,SAAS;AAAA,uBACjB,QAAQ,GAAG,GAAG;AAAA,qBAChB,IAAI;AAAA,uBACF,YAAY,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA,eAI1B,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY;AAAA,eACvC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ;AAAA,eAChC,UAAU,CAAC,QAAQ,EAAE,WAAW;AAAA;AAAA;AAAA;AAAA,WAIpC,YAAY,CAAC,qBAAqB,GAAG,QAAQ,CAAC,YAAY,EAAE,OAAO,KAAK,IAAI;AAAA,eACxE,GAAG,CAAC,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAAA,eAC5C,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,KAAK;AAAA,eACnC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG;AAAA,eACzB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;AAAA,iBACrC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAAA;AAAA,eAEhC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI;AAAA;AAAA;AAAA,QAG5C,MAAM,CAAC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,K;ACzF3B,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,SAAS,EAAE,SAAS,GAAG,SAAS;AAAA;AAAA,IAErC,SAAS,EAAE,MAAM,KAAK,QAAQ;AAAA;AAAA,IAE9B,QAAQ,CAAC,SAAS,CAAC,QAAQ;AAAA,QACvB,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;AAAA,YACtD,UAAU,GAAG,UAAU;AAAA,YACvB,YAAY,GAAG,EAAE;AAAA,YACjB,OAAO,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,K;AChBzB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,SAAS,EAAE,aAAa,GAAG,aAAa;AAAA;AAAA,IAE7C,aAAa,EAAE,MAAM,KAAK,QAAQ;AAAA;AAAA,IAElC,QAAQ,CAAC,aAAa,CAAC,QAAQ;AAAA,QAC3B,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;AAAA,YACrD,UAAU,GAAG,UAAU;AAAA,YACvB,YAAY,GAAG,EAAE;AAAA,YACjB,OAAO,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,K;AChBzB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,SAAS,EAAE,YAAY,GAAG,YAAY;AAAA;AAAA,IAE3C,YAAY,EAAE,MAAM,KAAK,QAAQ;AAAA;AAAA,IAEjC,QAAQ,CAAC,YAAY,CAAC,QAAQ;AAAA,QAC1B,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AAAA,YACzD,UAAU,GAAG,UAAU;AAAA,YACvB,YAAY,GAAG,EAAE;AAAA,YACjB,OAAO,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,K;AChBzB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,SAAS,EAAE,UAAU,GAAG,UAAU;AAAA;AAAA,IAEvC,UAAU,EAAE,MAAM,KAAK,QAAQ;AAAA;AAAA,IAE/B,QAAQ,CAAC,UAAU,CAAC,QAAQ;AAAA,QACxB,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI;AAAA,YACvD,UAAU,GAAG,UAAU;AAAA,YACvB,YAAY,GAAG,EAAE;AAAA,YACjB,OAAO,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,K;AChBzB,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,UAAU,EAAE,UAAU,GAAG,UAAU;AAAA;AAAA,IAExC,UAAU,EAAE,MAAM,KAAK,aAAa,KAAK,SAAS,KAAK,IAAI,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,IAAI,aAAa;AAAA;AAAA,IAEhH,QAAQ,CAAC,UAAU,CAAC,aAAa,GAAG,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,WAAW,GAAG,KAAK,EAAE,aAAa;AAAA;AAAA,KAEhG,GAAG,CAAC,EAAE,GAAG,IAAI;AAAA;AAAA,iBAED,MAAM;AAAA;AAAA,WAEZ,GAAG,CAAC,MAAM,CAAC,KAAK;AAAA,WAChB,EAAE,CAAC,WAAW,IAAI,IAAI;AAAA,QACzB,EAAE,CAAC,WAAW;AAAA;AAAA;AAAA,SAGb,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC,eAAe,GAAG,QAAQ,EAAE,KAAK,EAAE,IAAI;AAAA,YAC7D,EAAE,CAAC,WAAW;AAAA;AAAA;AAAA,QAGlB,EAAE,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK;AAAA;AAAA,YAE3B,EAAE,EAAE,EAAE,CAAC,WAAW,KAAK,KAAK;AAAA,gBACxB,EAAE,CAAC,WAAW;AAAA,cAChB,IAAI;AAAA,gBACF,EAAE,CAAC,WAAW,GAAG,KAAK;AAAA;AAAA;AAAA,eAGvB,KAAK,CAAC,KAAK;AAAA,aACb,KAAK,CAAC,EAAE,EAAE,IAAI;AAAA;AAAA,gBAEX,MAAM,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKX,OAAO,CAAC,KAAK;AAAA,WACnB,GAAG,CAAC,MAAM,CAAC,MAAM;AAAA,QACpB,EAAE,CAAC,YAAY,IAAI,SAAS,CAAC,WAAW,CAAC,MAAM;AAAA;AAAA,QAE/C,EAAE,CAAC,gBAAgB,KAAK,IAAI,CAAC,MAAM;AAAA;AAAA,WAEhC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;AAAA,QAC7C,EAAE,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM;AAAA,YAC1B,EAAE,CAAC,WAAW;AAAA,aACb,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM;AAAA,YACtC,GAAG,CAAC,cAAc;AAAA,gBACd,CAAC,GAAG,MAAM;AAAA,gBACV,CAAC,GAAG,MAAM;AAAA,gBACV,CAAC,GAAG,MAAM;AAAA,gBACV,CAAC,GAAG,IAAI;AAAA;AAAA;AAAA,YAGZ,EAAE,CAAC,gBAAgB,KAAK,IAAI,KAAK,cAAc,EAAE,SAAS,CAAC,WAAW,CAAC,MAAM;AAAA,GACtF,QAAQ;AAAA,YACC,aAAa,CAAC,SAAS,CAAC,MAAM;AAAA,eAC3B,EAAE,CAAC,cAAc;AAAA;AAAA;AAAA;AAAA,iBAIf,GAAG,CAAC,KAAK;AAAA;AAAA,WAEf,KAAK,CAAC,KAAK;AAAA,QACd,EAAE,CAAC,QAAQ;AAAA,YACP,GAAG,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ;AAAA,YAClF,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,OAAO,GAAG,QAAQ;AAAA,YACtE,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,OAAO,GAAG,UAAU;AAAA;AAAA,QAE5E,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG;AAAA;AAAA,QAEhC,EAAE,CAAC,aAAa,GAAG,IAAI;AAAA,QACvB,EAAE,CAAC,aAAa,GAAG,IAAI;AAAA,QACvB,EAAE,CAAC,YAAY,GAAG,IAAI;AAAA,QACtB,EAAE,CAAC,YAAY,GAAG,IAAI;AAAA;AAAA,QAEtB,aAAa,CAAC,YAAY,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;AAAA;AAAA,YAEzD,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI;AAAA;AAAA,YAEtC,WAAW,CAAC,SAAS,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA,QAIhC,aAAa,CAAC,YAAY,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;AAAA;AAAA,YAEzD,GAAG,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI;AAAA;AAAA,YAEtC,WAAW,CAAC,SAAS,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA,QAIhC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK;AAAA;AAAA,YAEjC,GAAG,CAAC,EAAE,GAAG,SAAS;AAAA;AAAA,YAElB,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;AAAA;AAAA,gBAEvD,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI;AAAA;AAAA,gBAElC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;AAAA,oBAC5B,EAAE,CAAC,CAAC,EAAE,KAAK;AAAA;AAAA;AAAA,gBAGf,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;AAAA,oBAC5B,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;AAAA,wBAC/B,KAAK,CAAC,CAAC,EAAE,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,IAAI;AAAA,wBACxC,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,SAAS,KAAK,CAAC,CAAC,EAAE,IAAI;AAAA;AAAA,wBAEzC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,IAAI,KAAK,CAAC,CAAC,EAAE,SAAS;AAAA,4BACrC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,gBAIpC,EAAE,EAAE,KAAK,KAAK,IAAI;AAAA,oBACd,EAAE,CAAC,aAAa,GAAG,EAAE;AAAA,kBACvB,IAAI;AAAA,oBACF,EAAE,CAAC,aAAa,GAAG,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAO9B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI;AAAA,QACzB,EAAE,CAAC,aAAa,IAAI,IAAI;AAAA,QACxB,EAAE,CAAC,iBAAiB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG;AAAA;AAAA,QAErC,EAAE,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI;AAAA,YAC/B,EAAE,CAAC,aAAa,GAAG,IAAI;AAAA,YACvB,EAAE,EAAE,IAAI,MAAM,IAAI;AAAA,gBACd,EAAE,CAAC,iBAAiB,KAAK,IAAI,CAAC,IAAI;AAAA,cACpC,IAAI;AAAA,gBACF,EAAE,CAAC,iBAAiB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA,WAI1C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;AAAA,QAClC,EAAE,CAAC,aAAa;AAAA;AAAA,QAEhB,EAAE,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK;AAAA;AAAA,YAEpC,GAAG,CAAC,UAAU,SAAS,IAAI;AAAA,YAC3B,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU;AAAA;AAAA,eAE1C,EAAE,CAAC,SAAS,CAAC,QAAQ;AAAA,YACxB,EAAE,EAAE,GAAG,IAAI,CAAC;AAAA,gBACR,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAAA;AAAA;AAAA,eAG/B,EAAE,CAAC,KAAK,CAAC,QAAQ;AAAA,YACpB,IAAI;AAAA,gBACA,EAAE,CAAC,aAAa,CAAC,IAAI,OAAO,IAAI;AAAA;AAAA;AAAA,eAGjC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;AAAA,YACjD,EAAE,EAAE,KAAK,MAAM,QAAQ,KAAK,EAAE,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC;AAAA,gBACpD,EAAE,CAAC,aAAa,CAAC,IAAI,GAAG,UAAU;AAAA;AAAA;AAAA,YAGtC,aAAa,CAAC,cAAc,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA,iBAI/C,MAAM,CAAC,KAAK;AAAA,QACrB,EAAE,CAAC,iBAAiB;AAAA,YAChB,OAAO,EAAE,KAAK;AAAA,YACd,KAAK,EAAE,KAAK;AAAA,YACZ,IAAI,EAAE,KAAK;AAAA,YACX,IAAI,EAAE,KAAK;AAAA,YACX,KAAK,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA,iBAIP,IAAI,CAAC,KAAK;AAAA,QACnB,EAAE,CAAC,YAAY,IAAI,IAAI;AAAA,QACvB,EAAE,CAAC,gBAAgB,KAAK,IAAI,CAAC,IAAI;AAAA;AAAA,QAEjC,EAAE,CAAC,mBAAmB,GAAG,QAAQ,CAAC,KAAK;AAAA,YACnC,aAAa,CAAC,mBAAmB,CAAC,KAAK;AAAA;AAAA;AAAA,QAG3C,EAAE,CAAC,eAAe,GAAG,QAAQ,CAAC,IAAI;AAAA;AAAA,YAE9B,EAAE,CAAC,YAAY,GAAG,IAAI;AAAA,YACtB,EAAE,EAAE,IAAI,MAAM,IAAI;AAAA,gBACd,EAAE,CAAC,gBAAgB,KAAK,IAAI,CAAC,IAAI;AAAA,cACnC,IAAI;AAAA,gBACF,EAAE,CAAC,gBAAgB,KAAK,IAAI,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA,QAIzC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY;AAAA;AAAA,YAElD,EAAE,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;ACtMhD,CAAC,QAAQ;AAAA;AAAA,KAEJ,GAAG,CAAC,MAAM;AAAA;AAAA,IAEX,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,SAAS,EAAE,MAAM,GAAG,MAAM;AAAA;AAAA,IAE/B,MAAM,EAAE,MAAM,KAAK,QAAQ;AAAA;AAAA,IAE3B,QAAQ,CAAC,MAAM,CAAC,QAAQ;AAAA,QACpB,MAAM;AAAA,YACF,QAAQ,GAAG,CAAC;AAAA,YACZ,KAAK;AAAA,YACL,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI;AAAA,YAC1D,UAAU,GAAG,UAAU;AAAA,YACvB,YAAY,GAAG,EAAE;AAAA,YACjB,OAAO,EAAE,IAAI;AAAA;AAAA;AAAA;AAAA,K;ACjBzB,CAAC,QAAQ;AAAA;AAAA,EAEP,GAAG,CAAC,MAAM;AAAA;AAAA,IAER,OAAO;AAAA,SACF,MAAM,EAAE,YAAY;AAAA,SACpB,OAAO,EAAE,aAAa,GAAG,aAAa;AAAA;AAAA,IAE3C,aAAa,EAAE,MAAM,KAAK,UAAU,KAAK,SAAS,KAAK,IAAI,IAAI,aAAa,IAAI,YAAY;AAAA;AAAA,IAE5F,QAAQ,CAAC,aAAa,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,EAAE,aAAa,EAAE,YAAY;AAAA;AAAA,QAE7E,GAAG,CAAC,GAAG;AAAA;AAAA;AAAA,gBAGC,MAAM,CAAC,GAAG,CAAC,KAAK;AAAA;AAAA;AAAA,QAGxB,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS;AAAA;AAAA,QAEvC,GAAG,CAAC,aAAa;AAAA,YACb,gBAAgB,IAAI,MAAM,CAAC,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI;AAAA;AAAA,QAE/T,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK;AAAA;AAAA,YAEhC,GAAG,CAAC,KAAK;AAAA,gBACL,MAAM,IAAI,SAAS,CAAC,WAAW;AAAA,gBAC/B,SAAS;AAAA,oBACL,KAAK,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAAA,oBACrS,GAAG,KAAK,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,KAAK,MAAM,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI;AAAA,oBAC5H,GAAG;AAAA;AAAA;AAAA,eAGR,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO;AAAA,YACtC,EAAE,GAAG,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,UAAU,MAAM,CAAC;AAAA,gBACrD,KAAK,CAAC,IAAI,GAAG,UAAU;AAAA;AAAA;AAAA,eAGxB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;AAAA,YACjC,EAAE,GAAG,KAAK;AAAA,gBACN,EAAE,EAAE,KAAK,MAAM,QAAQ;AAAA,oBACnB,MAAM,CAAC,QAAQ,GAAG,KAAK;AAAA,oBACvB,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC,GAAG;AAAA,kBACzD,IAAI;AAAA,uBACC,OAAO,CAAC,GAAG,CAAC,UAAU;AAAA;AAAA,cAE/B,IAAI;AAAA,gBACF,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG;AAAA;AAAA;AAAA,YAGrE,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG;AAAA;AAAA;AAAA,eAGpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG;AAAA,eAChC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK;AAAA;AAAA;AAAA;AAAA,WAIpC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ;AAAA,QAC/D,QAAQ,CAAC,SAAS,CAAC,MAAM;AAAA,YACrB,GAAG,CAAC,SAAS,GAAG,MAAM;AAAA,aACrB,SAAS,CAAC,YAAY,GAAG,SAAS;AAAA,YACnC,cAAc;AAAA;AAAA;AAAA,WAGf,IAAI,CAAC,IAAI,CAAC,IAAI;AAAA,QACjB,QAAQ,CAAC,WAAW;AAAA,YAChB,GAAG,CAAC,KAAK,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI;AAAA,YACjG,MAAM,EAAE,IAAI;AAAA,gBACR,MAAM,GAAG,GAAG;AAAA,gBACZ,GAAG,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA,WAIf,GAAG,CAAC,OAAO,CAAC,SAAS;AAAA,QACxB,QAAQ,CAAC,YAAY,EAAE,KAAK;AAAA,eACrB,QAAQ;AAAA,YACX,GAAG,CAAC,MAAM,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,IAAI;AAAA,gBACnG,KAAK;AAAA;AAAA,YAET,EAAE,EAAE,KAAK,KAAK,IAAI;AAAA,gBACd,KAAK,GAAG,MAAM,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU;AAAA,cAC3D,IAAI;AAAA,gBACF,KAAK,GAAG,MAAM,IAAI,gBAAgB;AAAA;AAAA;AAAA,YAGtC,MAAM,EAAE,IAAI;AAAA,gBACR,MAAM,GAAG,GAAG;AAAA,gBACZ,GAAG,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA,WAIf,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI;AAAA,QACvB,QAAQ,CAAC,WAAW,EAAE,KAAK;AAAA;AAAA;AAAA,YAGvB,GAAG,CAAC,MAAM,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI;AAAA,gBAClG,KAAK;AAAA;AAAA,YAET,EAAE,EAAE,KAAK,KAAK,IAAI;AAAA,gBACd,KAAK,GAAG,MAAM,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU;AAAA,cAC3D,IAAI;AAAA,gBACF,KAAK,GAAG,MAAM,IAAI,gBAAgB;AAAA;AAAA;AAAA,YAGtC,MAAM,EAAE,IAAI;AAAA,gBACR,MAAM,GAAG,GAAG;AAAA,gBACZ,GAAG,EAAE,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,KAKrB,GAAG,CAAC,aAAa;AAAA,YACV,WAAW,EAAE,WAAW;AAAA,YACxB,WAAW,EAAE,WAAW;AAAA,YACxB,YAAY,EAAE,YAAY;AAAA,YAC1B,SAAS,EAAE,SAAS;AAAA,YACpB,GAAG,EAAE,GAAG;AAAA,YACR,cAAc,EAAE,cAAc;AAAA;AAAA;AAAA,EAGxC,MAAM,CAAC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA","file":"map-app.js","sourcesContent":["(function() {\n\n    'use strict';\n\n    FastClick.attach(document.body);\n\n    angular\n        .module('ctrlsModule', []);\n    angular\n        .module('layersModule', []);\n    angular\n        .module('panelsModule', []);\n    angular\n        .module('popupsModule', []);\n\n    function getBasePath(suffix){\n\n        var path = '';\n\n        if (window.location.host === 'friendsofsleepingbear.org'){\n            path = window.location.origin + '/wp-content/plugins/wp-fosb-map/' + suffix;\n        } else {\n            path = window.location.origin + '/fosb/wp-content/plugins/wp-fosb-map/' + suffix;\n        }\n\n        return path;\n\n    }\n\n    angular\n        .module('basePathModule',[])\n        .constant('basePath',{\n            url: getBasePath\n        });\n\n    angular.module('mapApp', [\n            'basePathModule',\n            'ctrlsModule',\n            'panelsModule',\n            'popupsModule',\n            'layersModule',\n            'ngAnimate',\n            'angularUtils.directives.dirPagination',\n            'ui.router',\n        ])\n        .run(['$log', '$rootScope', '$state', '$stateParams', '$location',\n            function ($log, $rootScope, $state, $stateParams, $location) {\n                $rootScope.$state = $state;\n                $rootScope.$stateParams = $stateParams;\n\n                // Let's keep track of these, hey?\n                $rootScope.queryStates = {\n                    season: 3,\n                    pics: 'trail_pix',\n                    features: [\"'mainpoints'\"],\n                    commercial: [\"''\"],\n                    cond: false,\n                };\n\n                $stateParams.seasons = $rootScope.queryStates.season;\n            }\n        ]);\n\n})();\n","(function() {\n\n    'use strict';\n\n    function getMss(css){\n        var elem = '#mss-' + css,\n            mss = $(elem).text();\n        return mss;\n    }\n\n\n\n    angular\n        .module('mapApp')\n        .value('cdbValues',{\n            attribution: false,\n            // detectRetina: true,\n            sql_domain: \"cartodb.com\",\n            sql_port: \"443\",\n            sql_protocol: \"https\",\n            tiler_protocol: \"https\",\n            tiler_domain: \"cartodb.com\",\n            tiler_port: \"443\",\n            type: 'CartoDB',\n            user_name: 'remcaninch',\n            baseInfo: {\n                attribution: false,\n                // detectRetina: true,\n                sql_domain: \"cartodb.com\",\n                sql_port: \"443\",\n                sql_protocol: \"https\",\n                tiler_protocol: \"https\",\n                tiler_domain: \"cartodb.com\",\n                tiler_port: \"443\",\n                type: 'CartoDB',\n                user_name: 'remcaninch',\n            },\n            trailSublayer: [ // Use trail as default sublayer\n                {\n                    sql: \"SELECT the_geom_webmercator, cartodb_id FROM sbht\",\n                    cartocss: getMss('lines'),\n                    interactivity: 'cartodb_id',\n                }\n            ],\n            gradeSublayer: { // GRADE\n                cartocss: \"#sbht_grade[zoom>=13]{line-color: red; line-width: 4; line-opacity: .76; line-join: round; line-smooth: .25;}\",\n                sql: \"SELECT the_geom_webmercator, cartodb_id FROM sbht_grade WHERE cartodb_id = null\",\n            }, // end GRADE\n            cautionSublayer: { // CAUTION\n                cartocss: \"#sbht_caution[zoom>=13]{line-color: yellow; line-width: 4; line-opacity: .76; line-join: round; line-smooth: .25;}\",\n                sql: \"SELECT the_geom_webmercator, cartodb_id FROM sbht_caution WHERE cartodb_id = null\",\n            }, // end CAUTION\n            commSublayer: { // COMMERCIAL\n                sql: \"SELECT the_geom_webmercator, cartodb_id FROM commercial\",\n                cartocss: \"#trail_pix_digitize{marker-fill:orange;marker-placement:point;marker-type:ellipse;marker-width:.1;marker-allow-overlap:true;}\",\n                // interactivity: 'cartodb_id',\n            }, // end COMMERCIAL\n            featSublayer: { // FEATURES\n                cartocss: getMss('features'),\n                // cartocss: \"#features[cartodb_id=2]{marker-width: 14}\",\n                interactivity: 'cartodb_id, type, filepath, layer, seasons',\n                sql: \"SELECT 'features' AS layer, features.the_geom_webmercator, features.seasons, features.cartodb_id, features.type, features.filepath, feature_types.name AS type_name, feature_types.priority FROM features INNER JOIN feature_types ON features.type=feature_types.type WHERE substring(features.seasons,3,1) = 'y' AND features.type = 'mainpoints' ORDER BY priority DESC\",\n            },\n            // trailPixSublayer: {\n            //     cartocss: \"#trail_pix{marker-width: 1}\",\n            //     interactivity: 'cartodb_id, type, filepath, layer, seasons',\n            // }\n\n        });\n\n})();\n","(function() {\n\n    'use strict';\n\n    angular\n        .module('mapApp')\n        .directive('interactiveMap', interactiveMap);\n\n    interactiveMap.$inject = ['mapFactory', 'layersFactory'];\n\n    function interactiveMap(mapFactory, layersFactory){\n\n        return {\n            restrict: 'E',\n            template: '<div class=\"map\" id=\"map\"></div>',\n            replace: true,\n            controller: function(){\n\n                function init(){\n                    mapFactory.createMap();\n                    layersFactory.addCdbLayer(mapFactory.map);\n                }\n\n                init();\n\n            }\n        };\n\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('mapApp')\n        .factory('mapFactory', mapFactory);\n\n    mapFactory.$inject = ['cdbValues'];\n\n    function mapFactory(cdbValues){\n\n        var map = {};\n\n        var tileLayers = {\n            aerial: L.esri.basemapLayer('Imagery'),\n            terrain: L.esri.basemapLayer('Topographic')\n            // terrain: L.tileLayer('https://api.tiles.mapbox.com/v4/mapbox.run-bike-hike/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6IlhHVkZmaW8ifQ.hAMX5hSW-QnTeRCMAy9A8Q', {\n            //     attribution: \"<a href='https://www.mapbox.com/about/maps/' target='_blank'>&copy; Mapbox &copy; OpenStreetMap</a><a class='mapbox-improve-map' href='https://www.mapbox.com/map-feedback/' target='_blank'>Improve this map</a>\"\n            // })\n        };\n\n        var leafletDefaults = {\n\n            attribution: false,\n            // center: [44.88652,-86.00544],\n            // zoom: 12,\n            zoomControl: false,\n            layers: tileLayers.terrain\n\n        };\n\n        var mapFactory = {\n            createMap: createMap,\n            map: map,\n            leafletDefaults: leafletDefaults,\n            tileLayers: tileLayers,\n            zoomHome: zoomHome,\n        };\n\n        function zoomHome(map){\n            var empireBeach = L.latLng(44.8123, -86.0681),\n                portOneida = L.latLng(44.9394, -85.9374),\n                center = L.latLng(44.87585, -86.00275);\n            map.fitBounds([\n                [empireBeach],\n                [portOneida]\n            ]);\n            // map.panTo(center);\n        }\n\n        function createMap(){\n\n            // Height of map-wrapper = screen height\n            // var screenHt = $(window).height();\n            // alert(screenHt);\n\n            // Unless it's an iPhone...\n            if (navigator.userAgent.match(/iPhone/i)){\n                // screenHt = screenHt + 72;\n                // $('#map-wrapper').css(\"height\",screenHt);\n                // if\n                // $('#map-wrapper').addClass('iphone');\n            }\n\n            // iPad\n            if (navigator.userAgent.match(/iPad/i)){\n                // screenHt = screenHt + 72;\n                // $('#map-wrapper').css(\"height\",screenHt);\n                // $('#map-wrapper').addClass('ipad');\n            }\n\n            mapFactory.map = L.map('map', leafletDefaults);\n\n            mapFactory.zoomHome(mapFactory.map);\n            return mapFactory.map;\n        }\n\n        return mapFactory;\n\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('layersModule')\n        .factory('layersFactory', layersFactory);\n\n    layersFactory.$inject = ['cdbValues', '$state', '$stateParams', '$rootScope', 'popupFactory', '$timeout'];\n\n    function layersFactory(cdbValues, $state, $stateParams, $rootScope, popupFactory, $timeout){\n\n        // Set empty objects for easy access later\n        var sublayers = {\n            sbht: {},\n            grade: {},\n            caution: {},\n            features: {},\n            commercial: {},\n            trailPics: {},\n            faces: {},\n            trailCond: {},\n        };\n\n    \tvar layersFactory = {\n            addCdbLayer: addCdbLayer,\n    \t\tcreateSublayers: createSublayers,\n            setSelFeatColor: setSelFeatColor,\n            sublayers: sublayers,\n    \t};\n\n        /* Create the CDB layer w/initial sublayer (trail) and add to map */\n    \tfunction addCdbLayer(map){\n\n            var cdbLayer = cdbValues.baseInfo;\n\n            // Need at least one sublayer to start, so use trail\n            // This means its index = 0\n            cdbLayer[\"sublayers\"] = cdbValues.trailSublayer;\n\n            // Create and add to map\n    \t    cartodb.createLayer(map, cdbLayer)\n    \t    .addTo(map)\n    \t    .on('done', function(layer){\n\n                // Add interaction\n                cdb.vis.Vis.addCursorInteraction(map, layer);\n\n                var picsLayer = $rootScope.queryStates.pics;\n\n                layer.getSubLayer(0).on('featureClick', function(e, latlng, pos, data, layerNumber) {\n                    $state.go('popup', {\n                        cartodb_id: 0,\n                        mile: 0,\n                        imgDir: '',\n                        layer: picsLayer,\n                        lat: pos[0],\n                        lon: pos[1],\n                    },{\n                        reload: true\n                    });\n                });\n\n                // Create remaining sublayers\n    \t        createSublayers(map, layer);\n\n    \t    })\n    \t    .on('error', function() {\n    \t        console.log(\"Ayo nayo! Could not add POINT layer\");\n    \t    });\n\n    \t}\n\n        /* Create remaining sublayers individually for more flexibility */\n    \tfunction createSublayers(map, layer){\n\n            /***** LINES *****/\n\n            // Grade overlay (index: 1)\n            layer.createSubLayer({\n              cartocss: cdbValues.gradeSublayer.cartocss,\n              name: 'grade',\n              sql: cdbValues.gradeSublayer.sql,\n            });\n\n            // Caution overlay (index: 2)\n            layer.createSubLayer({\n              cartocss: cdbValues.cautionSublayer.cartocss,\n              name: 'caution',\n              sql: cdbValues.cautionSublayer.sql,\n            });\n\n            /***** POINTS *****/\n\n            // Features (index: 3)\n            layer.createSubLayer({\n              cartocss: cdbValues.featSublayer.cartocss,\n              interactivity: cdbValues.featSublayer.interactivity,\n              name: 'features',\n              sql: cdbValues.featSublayer.sql,\n            }).on('featureClick', function(e, pos, latlng, data){\n\n\n                $state.go('popup', {\n                    cartodb_id: data.cartodb_id,\n                    mile: data.mile,\n                    imgDir: data.filepath,\n                    layer: 'features',\n                    lat: pos[0],\n                    lon: pos[1],\n                },{\n                    reload: true\n                });\n\n                // Restyle selected feature\n                setSelFeatColor(this, 'features', data.cartodb_id);\n\n            });\n\n            /* Assign variables to reference sublayer based on index */\n            layersFactory.sublayers.sbht     = layer.getSubLayer(0);\n            layersFactory.sublayers.grade     = layer.getSubLayer(1);\n            layersFactory.sublayers.caution   = layer.getSubLayer(2);\n            layersFactory.sublayers.features  = layer.getSubLayer(3);\n            // layersFactory.commercial = layer.getSubLayer(4);\n            // layersFactory.trailPics = layer.getSubLayer(5);\n            // layersFactory.faces     = layer.getSubLayer(6);\n            // layersFactory.trailCond = layer.getSubLayer(7);\n\n            /***** CLICK FUNCTIONALITY *****/\n            /* Set interaction for all sublayers */\n            var sublayers = layer.layers;\n            for (var i = 0; i < sublayers.length; i++) {\n\n                var sublayer = layer.getSubLayer(i);\n                sublayer.setInteraction(true);\n\n            } // end for loop\n\n        } // end returned object\n\n        /***** SET SELECTED FEATURE COLOR *****/\n        function setSelFeatColor(layer, elem, cartodb_id){\n\n            var newCss = getMss(elem, cartodb_id);\n            layer.setCartoCSS(newCss);\n\n        }\n\n        function getMss(layer, cartodb_id){\n            var mss = $('#mss-' + layer).text(),\n                newString = '#' + layer + '[cartodb_id=' + cartodb_id + '][zoom>1][zoom<22]{' +\n                      'bg/marker-fill: @c-sel-feat-fill;' +\n                      'bg/marker-line-color: @c-sel-feat-stroke;' +\n                    '}';\n            return mss + newString;\n        }\n\n    \treturn layersFactory;\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    var playground = function(){\n\n        return {\n            restrict: 'E',\n            templateUrl: '../../wp-content/plugins/wp-fosb-map/src/app/layers/templates/layersTemplate.html',\n            replace: true,\n            // CAREFUL WITH MINIFICATION HERE, NOT SURE HOW THIS WORKS W/INTERNAL CTRLER!\n            controller: function($scope, layersFactory, $http){\n\n                var layer = 'poi\\/',\n                    mile = 'n00\\/',\n                    type = 'features\\/',\n                    id = 'dc_trailhead\\/',\n                    level = 'secondary';\n\n                var subpath = layer + mile + type + id + level;\n\n                var fullPath = \"http://wpmulti.dev/fosb/wp-content/plugins/wp-fosb-map/get-images.php?dir=\" + subpath;\n\n                $http.get(fullPath, {})\n                .success(function(data) {\n                    for (var i = data.length - 1; i >= 0; i--) {\n                        console.log(data[i]);\n                    }\n                });\n\n            }\n        };\n\n    };\n\n    playground.$inject = ['mapFactory', '$rootScope', 'layersFactory'];\n\n    angular\n        .module('mapApp')\n        // .directive('interactiveMap', interactiveMap);\n        .directive('playground', playground);\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('popupsModule')\n        .controller('PopupCtrl', PopupCtrl);\n\n    PopupCtrl.$inject = ['$log', '$timeout', '$rootScope', '$scope', '$stateParams', 'selFeatData', 'basePath', 'popupFactory', 'layersFactory', '$state', 'mapFactory'];\n\n    function PopupCtrl($log, $timeout, $rootScope, $scope, $stateParams, selFeatData, basePath, popupFactory, layersFactory, $state, mapFactory){\n\n        var vm = this;\n\n        vm.currentSeason = $rootScope.queryStates.season;\n\n        /******************************/\n        /****** FEATURES POPUPS *******/\n        /******************************/\n\n        vm.closePopup = function(){\n            popupFactory.closePopup();\n        };\n\n        /* Active popup */\n        vm.imgPopupPage = true;\n\n        /********** DATA FOR SELECTED FEATURE **********/\n\n        /* Only need first row */\n        vm.selFeatData = selFeatData.rows[0];\n\n        /***** Header *****/\n\n        // Popup pages nav icon\n        vm.popupNavIcon = '#icon-info';\n\n        // Tooltip\n        vm.popupNavTooltip = 'View feature info';\n\n        vm.showPopupInfo = 'false';\n\n        // Type icon\n        vm.typeIcon = '#icon-' + vm.selFeatData.type;\n\n        popupFactory.findSecondary($stateParams)\n        .then(function(result) {\n\n            var imgObj = result.data,\n                secondaryImages, path;//, arr;\n                var arr = [];\n                var layer = $stateParams.layer;\n\n            for (var i in imgObj){\n                if (imgObj[i].hasOwnProperty(i)){\n                   arr.push(imgObj[i]);\n\n                }\n\n            }\n\n            return arr;\n        })\n        .then(function(result){\n            var activeImages = [],\n                secondImgFiles = result,\n                suffix = 'img_prod\\/' + $stateParams.layer + '\\/mid_size' + $stateParams.imgDir;\n\n            for( var i in secondImgFiles ) {\n                activeImages.push(suffix + secondImgFiles[i]);\n            }\n            vm.activeImages = activeImages;\n\n        });\n\n        /* Thumbnails */\n        // Thumbs pagination\n        $scope.currentPage = 1;\n\n        var thumbsParams = {\n            coords: [$stateParams.lat, $stateParams.lon],\n            data: vm.selFeatData,\n        }\n\n        /* PUT IT BACK */\n        popupFactory.setThumbs(thumbsParams).then(function(dataResponse) {\n\n            // debugger;\n            var thumbsData = dataResponse.data.rows;\n            var arr = [], path, layer;\n\n            for (var n = 0; n < thumbsData.length; n++) {\n\n                path = 'img_prod\\/' + thumbsData[n].layer + '\\/thumbnail' + thumbsData[n].filepath;\n                layer = thumbsData[n].layer;\n\n                if ( layer === 'features' || layer === 'commercial'){\n                    path = path + 'image00001.jpg';\n                }\n\n                arr.push({\n                    path: path,\n                    attribs: thumbsData[n],\n                });\n\n            }\n\n            vm.thumbsData = arr;\n\n        });\n\n        /* Trigger new popup */\n        vm.resetPopup = function(path, attribs){\n\n            // Primary/secondary\n\n            var layer = attribs.layer,\n                pointQueryLayer,\n                cdbId,\n                secondaryImages;\n\n            // Features, commercial, trail condition\n            if (layer !== 'trail_pix' && layer !== 'faces') {\n\n                cdbId = attribs.cartodb_id;\n\n                // Red pin for selected\n                pointQueryLayer = layersFactory.sublayers[layer];\n                layersFactory.setSelFeatColor(pointQueryLayer, layer, cdbId);\n\n            //     // Get primary & secondary\n            //     popupFactory.findSecondary(vm.selFeatData, $stateParams.layer)\n            //     .then(function(secondarySearchResult) {\n\n            //         var response = secondarySearchResult;\n            //         secondaryImages = popupFactory.setSecondary(response.data, vm.midSizePrefix);\n\n            //         // $rootScope.$broadcast('rootScope:secondarySet', secondaryImages);\n\n            //     });\n\n            } // else {\n\n            //     // create temp feature\n\n\n            //     // secondaryImages = [];\n            //     // secondaryImages = 'img_prod\\/' + attribs.layer + '\\/mid_size\\/' + attribs.filepath;\n            //     // $rootScope.$broadcast('rootScope:secondarySet', secondaryImages);\n            // }\n\n            // Pan to selection\n            mapFactory.map.panTo([attribs.lat, attribs.lon]);\n\n            // Thumbs\n            // popupFactory.setThumbs(thumbsParams).then(function(dataResponse) {\n            //     var thumbsData = dataResponse.data.rows;\n            //     // $rootScope.$broadcast('rootScope:thumbsSet', thumbsData);\n            // });\n\n            $state.go('popup', {\n                cartodb_id: attribs.cartodb_id,\n                layer: attribs.layer,\n                lat: attribs.lat,\n                lon: attribs.lon,\n                imgDir: attribs.filepath,\n            },{\n                reload: true\n            });\n\n\n        };\n\n    }\n\n\n})();\n\n\n        // $rootScope.$on('rootScope:thumbsSet', function (event, response) {\n\n        //     var arr = [], layer, path;\n\n        //     for (var n = 0; n < response.length; n++) {\n\n        //         path = 'img_prod\\/' + response[n].layer + '\\/thumbnail' + response[n].filepath;\n        //         layer = response[n].layer;\n\n        //         if ( layer === 'features' || layer === 'commercial'){\n        //             path = path + 'image00001.jpg';\n        //         }\n\n        //         arr.push({\n        //             path: path,\n        //             attribs: response[n],\n        //         });\n\n        //     }\n\n        //     vm.thumbsData = arr;\n\n        // });\n\n                // $rootScope.$on('rootScope:secondarySet', function (event, data) {\n\n        //     if ($stateParams.layer === 'features'){\n        //         vm.activeImages = vm.activeImages.concat(data);\n        //     } else {\n        //         vm.activeImages = data;\n        //     }\n        // });\n\n                // if (layer === 'features'|| layer === 'commercial'){\n\n        //     vm.activeImages = [pointPrimaryPath];\n\n        //     popupFactory.findSecondary(vm.selFeatData, layer)\n        //     .then(function(secondarySearchResult) {\n\n        //         var response = secondarySearchResult,\n        //             secondaryImages = popupFactory.setSecondary(response.data, midSizePrefix);\n\n        //         $rootScope.$broadcast('rootScope:secondarySet', secondaryImages);\n        //     });\n\n        // }","(function() {\n\n    'use strict';\n\n    angular\n        .module('popupsModule')\n        .factory('popupFactory', popupFactory);\n\n    popupFactory.$inject = ['$rootScope', '$http', 'basePath', '$timeout', '$state', '$stateParams'];\n\n    function popupFactory($rootScope, $http, basePath, $timeout, $state, $stateParams){\n\n        var defaultImg = 'sbht-i-map/img_prod/features/mid_size/n00/wdune-climb/image00009.jpg';\n\n        var popups = {\n            findSecondary: findSecondary,\n            defaultImg: defaultImg,\n            setSecondary: setSecondary,\n            setSeason: setSeason,\n            setThumbs: setThumbs,\n            closePopup: closePopup,\n        };\n\n        function closePopup(){\n            $state.go('home', {\n            },{\n                reload: true\n            });\n        }\n\n        function setSeason(query){\n            var newSeason = query;\n            sublayers.features.setSQL(newSeason);\n        }\n\n        /* Look for secondary images */\n        function findSecondary(data){\n\n            var suffix = data.layer + '\\/mid_size' + data.imgDir,\n                phpQuery = 'get-images.php?dir=' + suffix,\n                query;\n\n            if (data.layer === 'features'){\n                query = phpQuery;\n            } else {\n                query = \"https://remcaninch.cartodb.com/api/v2/sql?q=SELECT cartodb_id, the_geom, filepath, 'trail_pix' AS layer FROM trail_pix WHERE cartodb_id = null\";\n            }\n\n            return $http({\n                method: 'GET',\n                url: query,\n            });\n\n        }\n\n        /* Set secondary images */\n        function setSecondary(secondImgFiles) {\n\n            var activeImages = [];\n            var suffix = 'img_prod\\/' + $stateParams.layer + '\\/mid_size' + $stateParams.imgDir;\n\n            for( var i in secondImgFiles ) {\n\n                activeImages.push(suffix + secondImgFiles[i]);\n\n            }\n\n            return activeImages;\n\n        }\n\n        function setThumbs(params){\n            var query,\n                featQueryState = $rootScope.queryStates.features,\n                commQueryState = $rootScope.queryStates.commercial;\n\n            // Features\n            var featQuery = \"SELECT cartodb_id, the_geom, the_geom_webmercator, filepath,\"+\n                    \" ST_X(the_geom) AS lon, ST_Y(the_geom) AS lat,\" +\n                    \" ST_Distance(the_geom::geography,\" +\n                    \" CDB_LatLng(\" + params.coords + \")::geography) / 1000 \" +\n                    \" AS dist,\" +\n                    \" 'features' AS layer\" +\n                    \" FROM features WHERE type IN(\" + featQueryState + \")\" +\n                    \" AND substring(seasons,\" + $rootScope.queryStates.season + \",1) = 'y'\" +\n                    \" AND cartodb_id != \" + params.data.cartodb_id +\n                    \" UNION ALL\";\n\n            // Trail pics or faces\n            var picsQuery = \" SELECT cartodb_id, the_geom, the_geom_webmercator, filepath,\"+\n                    \" ST_X(the_geom) AS lon, ST_Y(the_geom) AS lat,\" +\n                    \" ST_Distance(the_geom::geography,\" +\n                    \" CDB_LatLng(\" + params.coords + \")::geography) / 1000 \" +\n                    \" AS dist,\" +\n                    \" 'trail_pix' AS layer\" +\n                    // \" FROM  \"+ $rootScope.queryStates.pics +\n                    \" FROM trail_pix\" +\n                    \" WHERE substring(seasons,\" + $rootScope.queryStates.season + \",1) = 'y'\" +\n                    \" ORDER BY dist LIMIT 50\";\n                    // alert(params.data.layer);\n\n                    // alert(picsQuery);\n            if (params.data.layer === 'trail_pix'){\n            }\n            var prefix = \"https://remcaninch.cartodb.com/api/v2/sql?q=\";\n            query = prefix + featQuery + picsQuery;\n\n            return $http({\n                method: 'GET',\n                url: query,\n            });\n        }\n\n    \treturn popups;\n    }\n\n})();\n","(function() {\n\n    'use strict';\n\n    angular.module('mapApp')\n        .config(['paginationTemplateProvider', '$stateProvider', '$urlRouterProvider', 'basePath', function(paginationTemplateProvider, $stateProvider, $urlRouterProvider, basePath) {\n\n            // Nothing to do w/routes, but set pagination template:\n            var pagPath = 'src/app/vendor/dirPagination.tpl.html';\n            paginationTemplateProvider.setPath(pagPath);\n\n            // Make these constants later...\n            var queryPrefix = 'https://remcaninch.cartodb.com/api/v2/sql?q=SELECT ',\n                midString = ' WHERE cartodb_id = ';\n\n            // $urlRouterProvider.otherwise('/');\n\n            $stateProvider\n                .state('home', {\n                    url: '/',\n                    // template: '<div ui-view></div>',\n                    params: {\n                        layer: ''\n                    },\n                    controller: function(){\n                        $('.leaflet-tile-container.leaflet-zoom-animated').click();\n                    },\n                })\n                .state('popup', {\n                    url: ':layer/:cartodb_id/:imgDir',\n                    templateUrl: 'src/app/popups/templates/popup.features.html',\n                    controller: 'PopupCtrl',\n                    controllerAs: 'vm',\n                    params: {\n                        lat: 0,\n                        lon: 0,\n                        seasons: 3,\n                    },\n                    resolve: {\n                        selFeatData: ['$http', '$stateParams', function($http, $stateParams) {\n\n                            var layer = $stateParams.layer,\n                                query;\n\n                            if (layer === 'trail_pix'){\n                                query = queryPrefix + \"cartodb_id, the_geom, filepath, 'trail_pix' AS layer FROM trail_pix\";\n                            } else {\n                                query = queryPrefix + \"cartodb_id, the_geom, type, name, filepath, '\" + layer + \"' AS layer\" +\n                                \" FROM \" + layer + \" WHERE cartodb_id = \" + $stateParams.cartodb_id;\n                            }\n\n                            return $http.get(query).then(function(response){\n                                return response.data;\n                            });\n\n                        }],\n                    }\n                });\n        }]);\n\n})();\n","(function() {\n\n    'use strict';\n\n    angular\n        .module('ctrlsModule')\n        .controller('CtrlsCtrl', CtrlsCtrl);\n\n    CtrlsCtrl.$inject = ['ctrlsFactory', 'basePath'];\n\n    function CtrlsCtrl(ctrlsFactory, basePath){\n\n        var vm = this,\n            map = ctrlsFactory.map,\n            tileLayers = ctrlsFactory.tileLayers;\n\n        addGps(map);\n\n        function addGps(map){\n\n            var gpsCtrl =  new L.Control.Gps({\n                maxZoom: 20,\n                style: {radius: 15, weight:4, color: 'red', fill: false, opacity:0.8}\n            });\n            gpsCtrl._map = map;\n\n            var controlDiv = gpsCtrl.onAdd(map);\n            $('#test').append(controlDiv);\n\n        }\n\n\n        vm.bgId = '#icon-tree';\n\n        vm.showAerial = false;\n        // vm.svgPath = basePath.url;// + 'src/';\n\n        vm.locate = ctrlsFactory.locate;\n\n        vm.zoomHome = ctrlsFactory.zoomHome;\n\n        vm.zoomIn = ctrlsFactory.zoomIn;\n\n        vm.zoomOut = ctrlsFactory.zoomOut;\n\n        vm.currentZoom = ctrlsFactory.getZoom();\n        vm.getZoom = function(){\n            vm.currentZoom = ctrlsFactory.getZoom();\n        }\n\n\n\n        // vm.changeTiles = ctrlsFactory.changeTiles;\n        vm.changeTiles = function(){\n\n            // var layerName = current.toString(),\n            //     newLayer = '',\n            //     currentLayer = '';\n\n            vm.showAerial = !vm.showAerial;\n\n            if (vm.showAerial) {\n                vm.bgId = '#icon-mountain';\n                map.removeLayer(tileLayers.terrain);\n                map.addLayer(tileLayers.aerial);\n                tileLayers.aerial.bringToBack();\n            } else {\n                vm.bgId = '#icon-tree';\n                map.removeLayer(tileLayers.aerial);\n                map.addLayer(tileLayers.terrain);\n                tileLayers.terrain.bringToBack();\n            }\n\n            // for (var key in tileLayers) {\n            //     if (key === layerName){\n            //         newLayer = key;\n            //     } else {\n            //         currentLayer = key;\n            //     }\n            // }\n\n            // map.removeLayer(tileLayers[currentLayer]);\n            // map.addLayer(tileLayers[newLayer]);\n            // tileLayers[newLayer].bringToBack();\n\n        }\n\n    }\n\n})();\n","(function() {\n\n    'use strict';\n\n    angular\n        .module('ctrlsModule')\n        .directive('mapControls', mapControls);\n\n    mapControls.$inject = ['basePath'];\n\n    function mapControls(basePath){\n        return {\n            restrict: 'E',\n            templateUrl: 'src/app/ctrls/templates/ctrlsTemplate.html',\n            controller: 'CtrlsCtrl',\n            controllerAs: 'vm',\n            replace: true\n        };\n    }\n\n})();","//////*   ctrlsFactory.js   *//////\n(function() {\n\n    'use strict';\n\n    angular\n        .module('ctrlsModule')\n        .factory('ctrlsFactory', ctrlsFactory);\n\n    // do this so you don't lose it during ugg...\n    ctrlsFactory.$inject = ['mapFactory'];\n\n    function ctrlsFactory(mapFactory){\n\n        var map = mapFactory.map;\n\n        var ctrlsFactory = {\n            getZoom: getZoom,\n            fullScreen: fullScreen,\n            locate: locate,\n            map: map,\n            tileLayers: mapFactory.tileLayers,\n            zoomHome: zoomHome,\n            zoomIn: zoomIn,\n            zoomOut: zoomOut,\n        };\n\n        function getZoom(){\n            return mapFactory.map.getZoom();\n        }\n\n        function zoomIn(){\n            map.zoomIn();\n        }\n\n        function zoomOut(){\n            map.zoomOut();\n        }\n\n        function zoomHome(){\n            mapFactory.zoomHome(map);\n        }\n\n        function locate(){\n            map.locate({\n                setView: true,\n                maxZoom: 13\n            });\n        }\n\n        function fullScreen(){\n            angular.element('#map-wrapper').toggleClass('fullscreen');\n            map.invalidateSize();\n            $('#map-wrapper')[0].scrollIntoView(true);\n        }\n\n        // function changeTiles(current) {\n        // function changeTiles() {\n\n\n\n        //     var layerName = current.toString(),\n        //         newLayer = '',\n        //         currentLayer = '';\n\n        //     for (var key in tileLayers) {\n        //         if (key === layerName){\n        //             newLayer = key;\n        //         } else {\n        //             currentLayer = key;\n        //         }\n        //     }\n\n        //     map.removeLayer(tileLayers[currentLayer]);\n        //     map.addLayer(tileLayers[newLayer]);\n        //     tileLayers[newLayer].bringToBack();\n\n        // };\n\n        // ctrlsFactory.executeFunctionByName = function(functionName, context /*, args */) {\n        //     var args = [].slice.call(arguments).splice(2);\n        //     var namespaces = functionName.split(\".\");\n        //     var func = namespaces.pop();\n        //     for(var i = 0; i < namespaces.length; i++) {\n        //       context = context[namespaces[i]];\n        //     }\n        //     return context[func].apply(this, args);\n        // };\n\n        return ctrlsFactory;\n\n    }\n\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('panelsModule')\n        .directive('panelInfo', panelInfo);\n\n    panelInfo.$inject = ['basePath'];\n\n    function panelInfo(basePath){\n        return {\n            restrict: 'E',\n            templateUrl: 'src/app/panels/templates/panel.info.html',\n            controller: 'PanelsCtrl',\n            controllerAs: 'vm',\n            replace: true\n        };\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('panelsModule')\n        .directive('panelFeatures', panelFeatures);\n\n    panelFeatures.$inject = ['basePath'];\n\n    function panelFeatures(basePath){\n        return {\n            restrict: 'E',\n            templateUrl: 'src/app/panels/templates/panel.poi.html',\n            controller: 'PanelsCtrl',\n            controllerAs: 'vm',\n            replace: true\n        };\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('panelsModule')\n        .directive('panelSeasons', panelSeasons);\n\n    panelSeasons.$inject = ['basePath'];\n\n    function panelSeasons(basePath){\n        return {\n            restrict: 'E',\n            templateUrl: 'src/app/panels/templates/panel.seasons.html',\n            controller: 'PanelsCtrl',\n            controllerAs: 'vm',\n            replace: true\n        };\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('panelsModule')\n        .directive('panelTrail', panelTrail);\n\n    panelTrail.$inject = ['basePath'];\n\n    function panelTrail(basePath){\n        return {\n            restrict: 'E',\n            templateUrl: 'src/app/panels/templates/panel.trail.html',\n            controller: 'PanelsCtrl',\n            controllerAs: 'vm',\n            replace: true\n        };\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('panelsModule')\n        .controller('PanelsCtrl', PanelsCtrl);\n\n    PanelsCtrl.$inject = ['panelsFactory', '$rootScope', '$http', '$scope', '$stateParams', '$state', 'layersFactory'];\n\n    function PanelsCtrl(panelsFactory, $rootScope, $http, $scope, $stateParams, $state, layersFactory){\n\n    \tvar vm = this;\n\n        //////// PANELS \\\\\\\\\\\\\\\\\n\n        // The active panel\n        // vm.activePanel = 'info';\n        vm.activePanel = '';\n\n\n        $rootScope.$on('rootScope:activeImagesSet', function (event, data) {\n            vm.activePanel = '';\n        });\n\n        vm.changePanel = function(panel){\n\n            if (vm.activePanel === panel){\n                vm.activePanel = '';\n            } else {\n                vm.activePanel = panel;\n            }\n\n            // Close popup\n            $state.go('home', {\n            },{\n                reload: true\n            });\n\n        };\n\n        //////// SEASONS PANEL \\\\\\\\\\\\\\\\\n        // The active season\n        vm.activeSeason = $rootScope.queryStates.season;\n\n        vm.activeSeasonIcon = '#icon-summer';\n\n        // Close Seasons panel when season is clicked\n        vm.setSeason = function(season){\n            vm.activePanel   = '';\n            $rootScope.queryStates.season = season;\n            var seasonsQueries = {\n                1: 'winter',\n                2: 'spring',\n                3: 'summer',\n                4: 'fall',\n            };\n\n            vm.activeSeasonIcon = '#icon-' + seasonsQueries[$rootScope.queryStates.season];\n// debugger;\n            panelsFactory.setSeason(season);\n            // vm.toggleFeatures\n\n        };\n\n        //////// POI VIEWS \\\\\\\\\\\\\\\\\n\n        // Pages/views\n        vm.poiPages = {\n            nav: {hover: false, icon: '#icon-map-pin', id: 'nav', heading: 'Points of Interest'},\n            feat: {hover: true, icon: '#icon-back', id: 'feat', heading: 'Features'},\n            comm: {hover: true, icon: '#icon-back', id: 'comm', heading: 'Businesses'}\n        };\n        vm.activePoiPg = vm.poiPages.nav;\n\n        vm.featSubGroups = null;\n        vm.commSubGroups = null;\n        vm.allFeatTypes = null;\n        vm.allCommTypes = null;\n\n        panelsFactory.getSubGroups('feat').then(function(dataResponse) {\n\n            var subGroups = dataResponse.data.rows;\n\n            getPoiTypes(subGroups, 'feat');\n\n        });\n\n        panelsFactory.getSubGroups('comm').then(function(dataResponse) {\n\n            var subGroups = dataResponse.data.rows;\n\n            getPoiTypes(subGroups, 'comm');\n\n        });\n\n        function getPoiTypes(subGroups, table){\n\n            var sg = subGroups;\n\n            panelsFactory.getPoiPages(table).then(function(dataResponse) {\n\n                var types = dataResponse.data.rows;\n\n                for (var i = 0; i < sg.length; i++) {\n                    sg[i].types = [];\n                }\n\n                for (var i = 0; i < sg.length; i++) {\n                    for (var n = 0; n < types.length; n++) {\n                        types[n].icon = \"#icon-\" + types[n].type;\n                        types[n].id = table + \"-\" + types[n].type;\n\n                        if (sg[i].sub_group == types[n].sub_group){\n                            sg[i].types.push(types[n]);\n                        }\n                    }\n                }\n                if (table == 'feat'){\n                    vm.featSubGroups = sg;\n                } else {\n                    vm.commSubGroups = sg;\n                }\n            });\n\n        }\n\n\n        // Change POI toggle view\n        vm.activePoiPage = 'Home';\n        vm.activePoiPageIcon = '#icon-map-pin';\n\n        vm.setActivePoiPage = function(page){\n            vm.activePoiPage = page;\n            if (page !== 'Home'){\n                vm.activePoiPageIcon = '#icon-back';\n            } else {\n                vm.activePoiPageIcon = '#icon-map-pin';\n            }\n        };\n\n        // Update SQL when feature toggled\n        vm.selectedTypes = [];\n\n        vm.toggleFeatures = function(type, layer){\n\n            var withQuotes = \"'\" + type + \"'\";\n            var idx = vm.selectedTypes.indexOf(withQuotes);\n\n            // is currently selected\n            if (idx > -1) {\n                vm.selectedTypes.splice(idx, 1);\n            }\n\n            // is newly selected\n            else {\n                vm.selectedTypes.push(\"'\" + type + \"'\");\n            }\n\n            // Put mainpoints back in if features array empty\n            if (layer === 'features' && vm.selectedTypes.length <= 0) {\n                vm.selectedTypes.push(\"'mainpoints'\");\n            }\n\n            panelsFactory.toggleFeatures(vm.selectedTypes, layer);\n\n        }\n\n        //////// TRAILS PANEL \\\\\\\\\\\\\\\\\n        vm.trailToggleStatus = {\n            caution: false,\n            grade: false,\n            cond: false,\n            pics: false,\n            faces: false\n        };\n\n\n        //////// INFO PANEL \\\\\\\\\\\\\\\\\n        vm.activeInfoPg = 'Home';\n        vm.activeInfoPgIcon = '#icon-info';\n\n        vm.toggleFeaturesLayer = function(layer){\n            panelsFactory.toggleFeaturesLayer(layer);\n        };\n\n        vm.setActiveInfoPg = function(page){\n\n            vm.activeInfoPg = page;\n            if (page !== 'Home'){\n                vm.activeInfoPgIcon = '#icon-back';\n            } else {\n                vm.activeInfoPgIcon = '#icon-info';\n            }\n        };\n\n        panelsFactory.getHelpData().then(function(dataResponse) {\n\n            vm.helpData = dataResponse.data.rows;\n\n        });\n\n\n\n\n    }\n\n})();","(function() {\n\n    'use strict';\n\n    angular\n        .module('panelsModule')\n        .directive('panels', panels);\n\n    panels.$inject = ['basePath'];\n\n    function panels(basePath){\n        return {\n            restrict: 'E',\n            scope: {},\n            templateUrl: 'src/app/panels/templates/panelsTemplate.html',\n            controller: 'PanelsCtrl',\n            controllerAs: 'vm',\n            replace: true\n        };\n    }\n\n})();","(function() {\n\n\t'use strict';\n\n    angular\n        .module('panelsModule')\n        .factory('panelsFactory', panelsFactory);\n\n    panelsFactory.$inject = ['mapFactory', '$rootScope', '$http', 'layersFactory', 'popupFactory'];\n\n    function panelsFactory(mapFactory, $rootScope, $http, layersFactory, popupFactory){\n\n        var hey;\n\n        /******************************/\n        /****** TOGGLE POI TYPES ******/\n        /******************************/\n\n        var sublayers = layersFactory.sublayers;\n\n        var selectedTypes = [],\n            mainPtsOnlyQuery = \"SELECT features.the_geom_webmercator, features.cartodb_id, features.type, features.mile, features.name_id, feature_types.name AS type_name, feature_types.priority FROM features INNER JOIN feature_types ON features.type=feature_types.type WHERE features.type = 'mainpoints' ORDER BY priority DESC\";\n\n        function toggleFeatures(types, layer){\n\n            var query,\n                states = $rootScope.queryStates,\n                featQuery = {\n                    start: \"SELECT 'features' AS layer, features.the_geom_webmercator, features.seasons, features.cartodb_id, features.type, features.filepath, feature_types.name AS type_name, feature_types.priority FROM features INNER JOIN feature_types ON features.type=feature_types.type WHERE features.type IN(\",\n                    end: \") AND substring(features.seasons,\" + states.season + \",1) = 'y' OR features.type = 'mainpoints' ORDER BY priority DESC\",\n                    all: \"\"\n                };\n\n            /* Make sure mainpoints always present */\n            if ( types && states.features.indexOf(\"'mainpoints'\") < 0){\n                types.push(\"'mainpoints'\");\n            }\n\n            /* When not called from setSeason()... */\n            if ( types ){\n                if (layer === 'features') {\n                    states.features = types;\n                    featQuery.all = featQuery.start + types + featQuery.end;\n                } else {\n                    /* similar for commercial */\n                }\n            } else {\n                featQuery.all = featQuery.start + states.features + featQuery.end;\n            }\n\n            sublayers.features.setSQL(featQuery.all);\n\n\n            // Trail pix even need to be in map?\n            // sublayers.trail_pix.setSQL(query);\n\n        }\n\n        /* Will need to be run by router to keep season toggle accurate*/\n        function setSeason(season){\n            var newSeason = season;\n            $rootScope.activeSeason = newSeason;\n            toggleFeatures();\n        }\n\n        /* Load help data */\n        function getHelpData(){\n            var query = 'https://remcaninch.cartodb.com/api/v2/sql?q=SELECT subject, text, topic_id FROM help';\n            return $http({\n                method: 'GET',\n                url: query\n            });\n        }\n\n        // Get feature subgroups\n        function getSubGroups (table){\n            // debugger;\n            var prefix = \"https://remcaninch.cartodb.com/api/v2/sql?q=SELECT DISTINCT ON (sub_group) sub_group FROM \",\n                query;\n\n            if (table == 'feat'){\n                query = prefix + \"feature_types WHERE type != 'mainpoints'\";\n            } else {\n                query = prefix + \"commercial_types\";\n            }\n\n            return $http({\n                method: 'GET',\n                url: query,\n             });\n        }\n\n        // Get POI toggles data\n        function getPoiPages (table){\n\n\n            var prefix = \"https://remcaninch.cartodb.com/api/v2/sql?q=SELECT name, sub_group, type, type_desc FROM \",\n                query;\n\n            if (table == 'feat'){\n                query = prefix + \"feature_types WHERE type != 'mainpoints'\";\n            } else {\n                query = prefix + \"commercial_types\";\n            }\n\n            return $http({\n                method: 'GET',\n                url: query,\n            });\n        }\n\n\n    \tvar panelsFactory = {\n            getHelpData: getHelpData,\n            getPoiPages: getPoiPages,\n            getSubGroups: getSubGroups,\n            setSeason: setSeason,\n            hey: hey,\n            toggleFeatures: toggleFeatures,\n    \t};\n\n\t\treturn panelsFactory;\n\n    }\n\n\n})();"]}